/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lumen;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.ResultSetMetaData;


/**
 *
 * @author Richard David
 */
public class Translate extends javax.swing.JFrame {
        Connection conn;
        ResultSet rs;
        PreparedStatement pst;
    /**
     * Creates new form Define
     */
    public Translate() {
        initComponents();
        setLocationRelativeTo(null);
        conn = ConnectDB.connectDb();
        abcPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        mainPnl = new javax.swing.JPanel();
        placeholderPnl = new javax.swing.JPanel();
        back = new javax.swing.JLabel();
        abcPanel = new javax.swing.JPanel();
        a1 = new javax.swing.JTextField();
        a2 = new javax.swing.JTextField();
        a3 = new javax.swing.JTextField();
        a4 = new javax.swing.JTextField();
        a5 = new javax.swing.JTextField();
        a6 = new javax.swing.JTextField();
        a7 = new javax.swing.JTextField();
        a8 = new javax.swing.JTextField();
        a9 = new javax.swing.JTextField();
        a10 = new javax.swing.JTextField();
        a11 = new javax.swing.JTextField();
        a12 = new javax.swing.JTextField();
        btnPanel = new javax.swing.JPanel();
        abcBtn = new javax.swing.JLabel();
        defBtn = new javax.swing.JLabel();
        ghiBtn = new javax.swing.JLabel();
        jklBtn = new javax.swing.JLabel();
        mnoBtn = new javax.swing.JLabel();
        pqrBtn = new javax.swing.JLabel();
        stuBtn = new javax.swing.JLabel();
        vwxBtn = new javax.swing.JLabel();
        yzBtn = new javax.swing.JLabel();
        reset = new javax.swing.JLabel();
        select = new javax.swing.JLabel();
        resultPnl = new javax.swing.JPanel();
        translateBtn = new javax.swing.JButton();
        searchFieldIndo = new javax.swing.JTextField();
        searchFieldEnglish = new javax.swing.JTextField();
        border = new javax.swing.JLabel();
        defPanel = new javax.swing.JPanel();
        d1 = new javax.swing.JTextField();
        d2 = new javax.swing.JTextField();
        d3 = new javax.swing.JTextField();
        d4 = new javax.swing.JTextField();
        d5 = new javax.swing.JTextField();
        d6 = new javax.swing.JTextField();
        d7 = new javax.swing.JTextField();
        d8 = new javax.swing.JTextField();
        d9 = new javax.swing.JTextField();
        d10 = new javax.swing.JTextField();
        d11 = new javax.swing.JTextField();
        d12 = new javax.swing.JTextField();
        ghiPanel = new javax.swing.JPanel();
        g1 = new javax.swing.JTextField();
        g2 = new javax.swing.JTextField();
        g3 = new javax.swing.JTextField();
        g4 = new javax.swing.JTextField();
        g5 = new javax.swing.JTextField();
        g6 = new javax.swing.JTextField();
        g7 = new javax.swing.JTextField();
        g8 = new javax.swing.JTextField();
        g9 = new javax.swing.JTextField();
        g10 = new javax.swing.JTextField();
        g11 = new javax.swing.JTextField();
        g12 = new javax.swing.JTextField();
        jklPanel = new javax.swing.JPanel();
        j1 = new javax.swing.JTextField();
        j2 = new javax.swing.JTextField();
        j3 = new javax.swing.JTextField();
        j4 = new javax.swing.JTextField();
        j5 = new javax.swing.JTextField();
        j6 = new javax.swing.JTextField();
        j7 = new javax.swing.JTextField();
        j8 = new javax.swing.JTextField();
        j9 = new javax.swing.JTextField();
        j10 = new javax.swing.JTextField();
        j11 = new javax.swing.JTextField();
        j12 = new javax.swing.JTextField();
        mnoPanel = new javax.swing.JPanel();
        m1 = new javax.swing.JTextField();
        m2 = new javax.swing.JTextField();
        m3 = new javax.swing.JTextField();
        m4 = new javax.swing.JTextField();
        m5 = new javax.swing.JTextField();
        m6 = new javax.swing.JTextField();
        m7 = new javax.swing.JTextField();
        m8 = new javax.swing.JTextField();
        m9 = new javax.swing.JTextField();
        m10 = new javax.swing.JTextField();
        m11 = new javax.swing.JTextField();
        m12 = new javax.swing.JTextField();
        pqrPanel = new javax.swing.JPanel();
        p1 = new javax.swing.JTextField();
        p2 = new javax.swing.JTextField();
        p3 = new javax.swing.JTextField();
        p4 = new javax.swing.JTextField();
        p5 = new javax.swing.JTextField();
        p6 = new javax.swing.JTextField();
        p7 = new javax.swing.JTextField();
        p8 = new javax.swing.JTextField();
        p9 = new javax.swing.JTextField();
        p10 = new javax.swing.JTextField();
        p11 = new javax.swing.JTextField();
        p12 = new javax.swing.JTextField();
        stuPanel = new javax.swing.JPanel();
        s1 = new javax.swing.JTextField();
        s2 = new javax.swing.JTextField();
        s3 = new javax.swing.JTextField();
        s4 = new javax.swing.JTextField();
        s5 = new javax.swing.JTextField();
        s6 = new javax.swing.JTextField();
        s7 = new javax.swing.JTextField();
        s8 = new javax.swing.JTextField();
        s9 = new javax.swing.JTextField();
        s10 = new javax.swing.JTextField();
        s11 = new javax.swing.JTextField();
        s12 = new javax.swing.JTextField();
        vwxPanel = new javax.swing.JPanel();
        v1 = new javax.swing.JTextField();
        v2 = new javax.swing.JTextField();
        v3 = new javax.swing.JTextField();
        v4 = new javax.swing.JTextField();
        v5 = new javax.swing.JTextField();
        v6 = new javax.swing.JTextField();
        v7 = new javax.swing.JTextField();
        v8 = new javax.swing.JTextField();
        v9 = new javax.swing.JTextField();
        v10 = new javax.swing.JTextField();
        v11 = new javax.swing.JTextField();
        v12 = new javax.swing.JTextField();
        yzPanel = new javax.swing.JPanel();
        y1 = new javax.swing.JTextField();
        y2 = new javax.swing.JTextField();
        y3 = new javax.swing.JTextField();
        y4 = new javax.swing.JTextField();
        y5 = new javax.swing.JTextField();
        y6 = new javax.swing.JTextField();
        y7 = new javax.swing.JTextField();
        y8 = new javax.swing.JTextField();
        zebraOld = new javax.swing.JTextField();
        radioEng = new javax.swing.JRadioButton();
        radioInd = new javax.swing.JRadioButton();
        searchPnl = new javax.swing.JPanel();
        res = new javax.swing.JTextField();
        switchBtn = new javax.swing.JButton();
        translateBG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lumen");
        setMaximumSize(new java.awt.Dimension(1540, 840));
        setMinimumSize(new java.awt.Dimension(1540, 840));
        setPreferredSize(new java.awt.Dimension(1540, 840));
        setResizable(false);
        setSize(new java.awt.Dimension(1540, 840));
        getContentPane().setLayout(null);

        mainPnl.setAlignmentX(0.0F);
        mainPnl.setAlignmentY(0.0F);
        mainPnl.setMaximumSize(new java.awt.Dimension(1540, 840));
        mainPnl.setMinimumSize(new java.awt.Dimension(1540, 840));
        mainPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mainPnlMouseEntered(evt);
            }
        });
        mainPnl.setLayout(null);

        placeholderPnl.setBackground(new java.awt.Color(42, 42, 42));
        placeholderPnl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                placeholderPnlMouseClicked(evt);
            }
        });
        placeholderPnl.setLayout(null);
        mainPnl.add(placeholderPnl);
        placeholderPnl.setBounds(350, 170, 380, 480);

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/back_button.png"))); // NOI18N
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        mainPnl.add(back);
        back.setBounds(0, 0, 160, 100);

        abcPanel.setVisible(false);
        abcPanel.setLayout(null);

        a1.setEditable(false);
        a1.setBackground(new java.awt.Color(42, 42, 42));
        a1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a1.setForeground(new java.awt.Color(255, 255, 255));
        a1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a1MouseClicked(evt);
            }
        });
        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });
        abcPanel.add(a1);
        a1.setBounds(0, 0, 380, 40);

        a2.setEditable(false);
        a2.setBackground(new java.awt.Color(42, 42, 42));
        a2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a2.setForeground(new java.awt.Color(255, 255, 255));
        a2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a2MouseClicked(evt);
            }
        });
        a2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ActionPerformed(evt);
            }
        });
        abcPanel.add(a2);
        a2.setBounds(0, 40, 380, 40);

        a3.setEditable(false);
        a3.setBackground(new java.awt.Color(42, 42, 42));
        a3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a3.setForeground(new java.awt.Color(255, 255, 255));
        a3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a3MouseClicked(evt);
            }
        });
        a3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a3ActionPerformed(evt);
            }
        });
        abcPanel.add(a3);
        a3.setBounds(0, 80, 380, 40);

        a4.setEditable(false);
        a4.setBackground(new java.awt.Color(42, 42, 42));
        a4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a4.setForeground(new java.awt.Color(255, 255, 255));
        a4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a4MouseClicked(evt);
            }
        });
        a4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a4ActionPerformed(evt);
            }
        });
        abcPanel.add(a4);
        a4.setBounds(0, 120, 380, 40);

        a5.setEditable(false);
        a5.setBackground(new java.awt.Color(42, 42, 42));
        a5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a5.setForeground(new java.awt.Color(255, 255, 255));
        a5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a5MouseClicked(evt);
            }
        });
        a5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a5ActionPerformed(evt);
            }
        });
        abcPanel.add(a5);
        a5.setBounds(0, 160, 380, 40);

        a6.setEditable(false);
        a6.setBackground(new java.awt.Color(42, 42, 42));
        a6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a6.setForeground(new java.awt.Color(255, 255, 255));
        a6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a6MouseClicked(evt);
            }
        });
        a6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a6ActionPerformed(evt);
            }
        });
        abcPanel.add(a6);
        a6.setBounds(0, 200, 380, 40);

        a7.setEditable(false);
        a7.setBackground(new java.awt.Color(42, 42, 42));
        a7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a7.setForeground(new java.awt.Color(255, 255, 255));
        a7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a7MouseClicked(evt);
            }
        });
        a7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a7ActionPerformed(evt);
            }
        });
        abcPanel.add(a7);
        a7.setBounds(0, 240, 380, 40);

        a8.setEditable(false);
        a8.setBackground(new java.awt.Color(42, 42, 42));
        a8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a8.setForeground(new java.awt.Color(255, 255, 255));
        a8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a8MouseClicked(evt);
            }
        });
        a8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a8ActionPerformed(evt);
            }
        });
        abcPanel.add(a8);
        a8.setBounds(0, 280, 380, 40);

        a9.setEditable(false);
        a9.setBackground(new java.awt.Color(42, 42, 42));
        a9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a9.setForeground(new java.awt.Color(255, 255, 255));
        a9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a9MouseClicked(evt);
            }
        });
        a9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a9ActionPerformed(evt);
            }
        });
        abcPanel.add(a9);
        a9.setBounds(0, 320, 380, 40);

        a10.setEditable(false);
        a10.setBackground(new java.awt.Color(42, 42, 42));
        a10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a10.setForeground(new java.awt.Color(255, 255, 255));
        a10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a10MouseClicked(evt);
            }
        });
        a10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a10ActionPerformed(evt);
            }
        });
        abcPanel.add(a10);
        a10.setBounds(0, 360, 380, 40);

        a11.setEditable(false);
        a11.setBackground(new java.awt.Color(42, 42, 42));
        a11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a11.setForeground(new java.awt.Color(255, 255, 255));
        a11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a11MouseClicked(evt);
            }
        });
        a11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a11ActionPerformed(evt);
            }
        });
        abcPanel.add(a11);
        a11.setBounds(0, 400, 380, 40);

        a12.setEditable(false);
        a12.setBackground(new java.awt.Color(42, 42, 42));
        a12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        a12.setForeground(new java.awt.Color(255, 255, 255));
        a12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        a12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a12MouseClicked(evt);
            }
        });
        a12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a12ActionPerformed(evt);
            }
        });
        abcPanel.add(a12);
        a12.setBounds(0, 440, 380, 40);

        mainPnl.add(abcPanel);
        abcPanel.setBounds(350, 170, 380, 480);

        btnPanel.setBackground(new java.awt.Color(42, 42, 42));
        btnPanel.setForeground(new java.awt.Color(255, 255, 255));
        btnPanel.setLayout(null);

        abcBtn.setBackground(new java.awt.Color(42, 42, 42));
        abcBtn.setForeground(new java.awt.Color(255, 255, 255));
        abcBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        abcBtn.setText("A - C");
        abcBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        abcBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        abcBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        abcBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                abcBtnMouseClicked(evt);
            }
        });
        btnPanel.add(abcBtn);
        abcBtn.setBounds(0, 30, 80, 50);

        defBtn.setBackground(new java.awt.Color(255, 255, 255));
        defBtn.setForeground(new java.awt.Color(255, 255, 255));
        defBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defBtn.setText("D - F");
        defBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        defBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        defBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        defBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                defBtnMouseClicked(evt);
            }
        });
        btnPanel.add(defBtn);
        defBtn.setBounds(80, 30, 80, 50);

        ghiBtn.setBackground(new java.awt.Color(255, 255, 255));
        ghiBtn.setForeground(new java.awt.Color(255, 255, 255));
        ghiBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ghiBtn.setText("G - I");
        ghiBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        ghiBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ghiBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ghiBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ghiBtnMouseClicked(evt);
            }
        });
        btnPanel.add(ghiBtn);
        ghiBtn.setBounds(160, 30, 80, 50);

        jklBtn.setBackground(new java.awt.Color(255, 255, 255));
        jklBtn.setForeground(new java.awt.Color(255, 255, 255));
        jklBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jklBtn.setText("J - L");
        jklBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jklBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jklBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jklBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jklBtnMouseClicked(evt);
            }
        });
        btnPanel.add(jklBtn);
        jklBtn.setBounds(240, 30, 70, 50);

        mnoBtn.setBackground(new java.awt.Color(255, 255, 255));
        mnoBtn.setForeground(new java.awt.Color(255, 255, 255));
        mnoBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mnoBtn.setText("M - O");
        mnoBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mnoBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mnoBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mnoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnoBtnMouseClicked(evt);
            }
        });
        btnPanel.add(mnoBtn);
        mnoBtn.setBounds(310, 30, 70, 50);

        pqrBtn.setBackground(new java.awt.Color(255, 255, 255));
        pqrBtn.setForeground(new java.awt.Color(255, 255, 255));
        pqrBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pqrBtn.setText("P -R");
        pqrBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pqrBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pqrBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pqrBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pqrBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pqrBtnMouseEntered(evt);
            }
        });
        btnPanel.add(pqrBtn);
        pqrBtn.setBounds(0, 80, 80, 50);

        stuBtn.setBackground(new java.awt.Color(255, 255, 255));
        stuBtn.setForeground(new java.awt.Color(255, 255, 255));
        stuBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        stuBtn.setText("S - U");
        stuBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        stuBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stuBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        stuBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stuBtnMouseClicked(evt);
            }
        });
        btnPanel.add(stuBtn);
        stuBtn.setBounds(80, 80, 80, 50);

        vwxBtn.setBackground(new java.awt.Color(255, 255, 255));
        vwxBtn.setForeground(new java.awt.Color(255, 255, 255));
        vwxBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vwxBtn.setText("V -X");
        vwxBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        vwxBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vwxBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vwxBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vwxBtnMouseClicked(evt);
            }
        });
        btnPanel.add(vwxBtn);
        vwxBtn.setBounds(160, 80, 80, 50);

        yzBtn.setBackground(new java.awt.Color(255, 255, 255));
        yzBtn.setForeground(new java.awt.Color(255, 255, 255));
        yzBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yzBtn.setText("Y - Z");
        yzBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        yzBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        yzBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        yzBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yzBtnMouseClicked(evt);
            }
        });
        btnPanel.add(yzBtn);
        yzBtn.setBounds(240, 80, 70, 50);

        reset.setBackground(new java.awt.Color(255, 255, 255));
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reset.setText("CLEAR");
        reset.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        btnPanel.add(reset);
        reset.setBounds(310, 80, 70, 50);

        select.setFont(new java.awt.Font("Fira Sans", 0, 12)); // NOI18N
        select.setForeground(new java.awt.Color(255, 255, 255));
        select.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        select.setText("SELECT A WORD FROM THE LIST");
        btnPanel.add(select);
        select.setBounds(70, 10, 240, 16);

        mainPnl.add(btnPanel);
        btnPanel.setBounds(350, 650, 380, 130);

        resultPnl.setBackground(new java.awt.Color(42, 42, 42));
        resultPnl.setForeground(new java.awt.Color(255, 255, 255));
        resultPnl.setLayout(null);

        translateBtn.setBackground(new java.awt.Color(42, 42, 42));
        translateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/3. translate_button.png"))); // NOI18N
        translateBtn.setBorder(null);
        translateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        translateBtn.setOpaque(false);
        translateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                translateBtnMouseClicked(evt);
            }
        });
        translateBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                translateBtnKeyPressed(evt);
            }
        });
        resultPnl.add(translateBtn);
        translateBtn.setBounds(420, -1, 90, 100);

        searchFieldIndo.setBackground(new java.awt.Color(42, 42, 42));
        searchFieldIndo.setFont(new java.awt.Font("Fira Sans", 0, 30)); // NOI18N
        searchFieldIndo.setForeground(new java.awt.Color(255, 255, 255));
        searchFieldIndo.setText("Enter a word");
        searchFieldIndo.setBorder(null);
        searchFieldIndo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldIndoMouseClicked(evt);
            }
        });
        searchFieldIndo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldIndoKeyPressed(evt);
            }
        });
        resultPnl.add(searchFieldIndo);
        searchFieldIndo.setBounds(20, 9, 380, 80);

        searchFieldEnglish.setBackground(new java.awt.Color(42, 42, 42));
        searchFieldEnglish.setFont(new java.awt.Font("Fira Sans", 0, 30)); // NOI18N
        searchFieldEnglish.setForeground(new java.awt.Color(255, 255, 255));
        searchFieldEnglish.setText("Enter a word");
        searchFieldEnglish.setBorder(null);
        searchFieldEnglish.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldEnglishMouseClicked(evt);
            }
        });
        searchFieldEnglish.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldEnglishKeyPressed(evt);
            }
        });
        resultPnl.add(searchFieldEnglish);
        searchFieldEnglish.setBounds(20, 9, 380, 80);

        border.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 10), new java.awt.Color(255, 255, 255))); // NOI18N
        border.setMaximumSize(new java.awt.Dimension(421, 97));
        border.setMinimumSize(new java.awt.Dimension(421, 97));
        border.setPreferredSize(new java.awt.Dimension(421, 97));
        resultPnl.add(border);
        border.setBounds(0, 1, 421, 97);

        mainPnl.add(resultPnl);
        resultPnl.setBounds(790, 280, 510, 100);

        defPanel.setVisible(false);
        defPanel.setLayout(null);

        d1.setEditable(false);
        d1.setBackground(new java.awt.Color(42, 42, 42));
        d1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d1.setForeground(new java.awt.Color(255, 255, 255));
        d1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d1MouseClicked(evt);
            }
        });
        d1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ActionPerformed(evt);
            }
        });
        defPanel.add(d1);
        d1.setBounds(0, 0, 380, 40);

        d2.setEditable(false);
        d2.setBackground(new java.awt.Color(42, 42, 42));
        d2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d2.setForeground(new java.awt.Color(255, 255, 255));
        d2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d2MouseClicked(evt);
            }
        });
        d2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d2ActionPerformed(evt);
            }
        });
        defPanel.add(d2);
        d2.setBounds(0, 40, 380, 40);

        d3.setEditable(false);
        d3.setBackground(new java.awt.Color(42, 42, 42));
        d3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d3.setForeground(new java.awt.Color(255, 255, 255));
        d3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d3MouseClicked(evt);
            }
        });
        d3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d3ActionPerformed(evt);
            }
        });
        defPanel.add(d3);
        d3.setBounds(0, 80, 380, 40);

        d4.setEditable(false);
        d4.setBackground(new java.awt.Color(42, 42, 42));
        d4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d4.setForeground(new java.awt.Color(255, 255, 255));
        d4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d4MouseClicked(evt);
            }
        });
        d4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d4ActionPerformed(evt);
            }
        });
        defPanel.add(d4);
        d4.setBounds(0, 120, 380, 40);

        d5.setEditable(false);
        d5.setBackground(new java.awt.Color(42, 42, 42));
        d5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d5.setForeground(new java.awt.Color(255, 255, 255));
        d5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d5MouseClicked(evt);
            }
        });
        d5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d5ActionPerformed(evt);
            }
        });
        defPanel.add(d5);
        d5.setBounds(0, 160, 380, 40);

        d6.setEditable(false);
        d6.setBackground(new java.awt.Color(42, 42, 42));
        d6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d6.setForeground(new java.awt.Color(255, 255, 255));
        d6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d6MouseClicked(evt);
            }
        });
        d6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d6ActionPerformed(evt);
            }
        });
        defPanel.add(d6);
        d6.setBounds(0, 200, 380, 40);

        d7.setEditable(false);
        d7.setBackground(new java.awt.Color(42, 42, 42));
        d7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d7.setForeground(new java.awt.Color(255, 255, 255));
        d7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d7MouseClicked(evt);
            }
        });
        d7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d7ActionPerformed(evt);
            }
        });
        defPanel.add(d7);
        d7.setBounds(0, 240, 380, 40);

        d8.setEditable(false);
        d8.setBackground(new java.awt.Color(42, 42, 42));
        d8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d8.setForeground(new java.awt.Color(255, 255, 255));
        d8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d8MouseClicked(evt);
            }
        });
        d8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d8ActionPerformed(evt);
            }
        });
        defPanel.add(d8);
        d8.setBounds(0, 280, 380, 40);

        d9.setEditable(false);
        d9.setBackground(new java.awt.Color(42, 42, 42));
        d9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d9.setForeground(new java.awt.Color(255, 255, 255));
        d9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d9MouseClicked(evt);
            }
        });
        d9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d9ActionPerformed(evt);
            }
        });
        defPanel.add(d9);
        d9.setBounds(0, 320, 380, 40);

        d10.setEditable(false);
        d10.setBackground(new java.awt.Color(42, 42, 42));
        d10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d10.setForeground(new java.awt.Color(255, 255, 255));
        d10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d10MouseClicked(evt);
            }
        });
        d10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d10ActionPerformed(evt);
            }
        });
        defPanel.add(d10);
        d10.setBounds(0, 360, 380, 40);

        d11.setEditable(false);
        d11.setBackground(new java.awt.Color(42, 42, 42));
        d11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d11.setForeground(new java.awt.Color(255, 255, 255));
        d11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d11MouseClicked(evt);
            }
        });
        d11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d11ActionPerformed(evt);
            }
        });
        defPanel.add(d11);
        d11.setBounds(0, 400, 380, 40);

        d12.setEditable(false);
        d12.setBackground(new java.awt.Color(42, 42, 42));
        d12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        d12.setForeground(new java.awt.Color(255, 255, 255));
        d12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d12MouseClicked(evt);
            }
        });
        d12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d12ActionPerformed(evt);
            }
        });
        defPanel.add(d12);
        d12.setBounds(0, 440, 380, 40);

        mainPnl.add(defPanel);
        defPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        ghiPanel.setLayout(null);

        g1.setEditable(false);
        g1.setBackground(new java.awt.Color(42, 42, 42));
        g1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g1.setForeground(new java.awt.Color(255, 255, 255));
        g1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g1MouseClicked(evt);
            }
        });
        g1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g1ActionPerformed(evt);
            }
        });
        ghiPanel.add(g1);
        g1.setBounds(0, 0, 380, 40);

        g2.setEditable(false);
        g2.setBackground(new java.awt.Color(42, 42, 42));
        g2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g2.setForeground(new java.awt.Color(255, 255, 255));
        g2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g2MouseClicked(evt);
            }
        });
        g2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g2ActionPerformed(evt);
            }
        });
        ghiPanel.add(g2);
        g2.setBounds(0, 40, 380, 40);

        g3.setEditable(false);
        g3.setBackground(new java.awt.Color(42, 42, 42));
        g3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g3.setForeground(new java.awt.Color(255, 255, 255));
        g3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g3MouseClicked(evt);
            }
        });
        g3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g3ActionPerformed(evt);
            }
        });
        ghiPanel.add(g3);
        g3.setBounds(0, 80, 380, 40);

        g4.setEditable(false);
        g4.setBackground(new java.awt.Color(42, 42, 42));
        g4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g4.setForeground(new java.awt.Color(255, 255, 255));
        g4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g4MouseClicked(evt);
            }
        });
        g4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g4ActionPerformed(evt);
            }
        });
        ghiPanel.add(g4);
        g4.setBounds(0, 120, 380, 40);

        g5.setEditable(false);
        g5.setBackground(new java.awt.Color(42, 42, 42));
        g5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g5.setForeground(new java.awt.Color(255, 255, 255));
        g5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g5MouseClicked(evt);
            }
        });
        g5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g5ActionPerformed(evt);
            }
        });
        ghiPanel.add(g5);
        g5.setBounds(0, 160, 380, 40);

        g6.setEditable(false);
        g6.setBackground(new java.awt.Color(42, 42, 42));
        g6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g6.setForeground(new java.awt.Color(255, 255, 255));
        g6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g6MouseClicked(evt);
            }
        });
        g6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g6ActionPerformed(evt);
            }
        });
        ghiPanel.add(g6);
        g6.setBounds(0, 200, 380, 40);

        g7.setEditable(false);
        g7.setBackground(new java.awt.Color(42, 42, 42));
        g7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g7.setForeground(new java.awt.Color(255, 255, 255));
        g7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g7MouseClicked(evt);
            }
        });
        g7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g7ActionPerformed(evt);
            }
        });
        ghiPanel.add(g7);
        g7.setBounds(0, 240, 380, 40);

        g8.setEditable(false);
        g8.setBackground(new java.awt.Color(42, 42, 42));
        g8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g8.setForeground(new java.awt.Color(255, 255, 255));
        g8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g8MouseClicked(evt);
            }
        });
        g8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g8ActionPerformed(evt);
            }
        });
        ghiPanel.add(g8);
        g8.setBounds(0, 280, 380, 40);

        g9.setEditable(false);
        g9.setBackground(new java.awt.Color(42, 42, 42));
        g9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g9.setForeground(new java.awt.Color(255, 255, 255));
        g9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g9MouseClicked(evt);
            }
        });
        g9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g9ActionPerformed(evt);
            }
        });
        ghiPanel.add(g9);
        g9.setBounds(0, 320, 380, 40);

        g10.setEditable(false);
        g10.setBackground(new java.awt.Color(42, 42, 42));
        g10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g10.setForeground(new java.awt.Color(255, 255, 255));
        g10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g10MouseClicked(evt);
            }
        });
        g10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g10ActionPerformed(evt);
            }
        });
        ghiPanel.add(g10);
        g10.setBounds(0, 360, 380, 40);

        g11.setEditable(false);
        g11.setBackground(new java.awt.Color(42, 42, 42));
        g11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g11.setForeground(new java.awt.Color(255, 255, 255));
        g11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g11MouseClicked(evt);
            }
        });
        g11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g11ActionPerformed(evt);
            }
        });
        ghiPanel.add(g11);
        g11.setBounds(0, 400, 380, 40);

        g12.setEditable(false);
        g12.setBackground(new java.awt.Color(42, 42, 42));
        g12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        g12.setForeground(new java.awt.Color(255, 255, 255));
        g12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        g12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                g12MouseClicked(evt);
            }
        });
        g12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g12ActionPerformed(evt);
            }
        });
        ghiPanel.add(g12);
        g12.setBounds(0, 440, 380, 40);

        mainPnl.add(ghiPanel);
        ghiPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        jklPanel.setLayout(null);

        j1.setEditable(false);
        j1.setBackground(new java.awt.Color(42, 42, 42));
        j1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j1.setForeground(new java.awt.Color(255, 255, 255));
        j1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j1MouseClicked(evt);
            }
        });
        j1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j1ActionPerformed(evt);
            }
        });
        jklPanel.add(j1);
        j1.setBounds(0, 0, 380, 40);

        j2.setEditable(false);
        j2.setBackground(new java.awt.Color(42, 42, 42));
        j2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j2.setForeground(new java.awt.Color(255, 255, 255));
        j2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j2MouseClicked(evt);
            }
        });
        j2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j2ActionPerformed(evt);
            }
        });
        jklPanel.add(j2);
        j2.setBounds(0, 40, 380, 40);

        j3.setEditable(false);
        j3.setBackground(new java.awt.Color(42, 42, 42));
        j3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j3.setForeground(new java.awt.Color(255, 255, 255));
        j3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j3MouseClicked(evt);
            }
        });
        j3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j3ActionPerformed(evt);
            }
        });
        jklPanel.add(j3);
        j3.setBounds(0, 80, 380, 40);

        j4.setEditable(false);
        j4.setBackground(new java.awt.Color(42, 42, 42));
        j4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j4.setForeground(new java.awt.Color(255, 255, 255));
        j4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j4MouseClicked(evt);
            }
        });
        j4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j4ActionPerformed(evt);
            }
        });
        jklPanel.add(j4);
        j4.setBounds(0, 120, 380, 40);

        j5.setEditable(false);
        j5.setBackground(new java.awt.Color(42, 42, 42));
        j5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j5.setForeground(new java.awt.Color(255, 255, 255));
        j5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j5MouseClicked(evt);
            }
        });
        j5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j5ActionPerformed(evt);
            }
        });
        jklPanel.add(j5);
        j5.setBounds(0, 160, 380, 40);

        j6.setEditable(false);
        j6.setBackground(new java.awt.Color(42, 42, 42));
        j6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j6.setForeground(new java.awt.Color(255, 255, 255));
        j6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j6MouseClicked(evt);
            }
        });
        j6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j6ActionPerformed(evt);
            }
        });
        jklPanel.add(j6);
        j6.setBounds(0, 200, 380, 40);

        j7.setEditable(false);
        j7.setBackground(new java.awt.Color(42, 42, 42));
        j7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j7.setForeground(new java.awt.Color(255, 255, 255));
        j7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j7MouseClicked(evt);
            }
        });
        j7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j7ActionPerformed(evt);
            }
        });
        jklPanel.add(j7);
        j7.setBounds(0, 240, 380, 40);

        j8.setEditable(false);
        j8.setBackground(new java.awt.Color(42, 42, 42));
        j8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j8.setForeground(new java.awt.Color(255, 255, 255));
        j8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j8MouseClicked(evt);
            }
        });
        j8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j8ActionPerformed(evt);
            }
        });
        jklPanel.add(j8);
        j8.setBounds(0, 280, 380, 40);

        j9.setEditable(false);
        j9.setBackground(new java.awt.Color(42, 42, 42));
        j9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j9.setForeground(new java.awt.Color(255, 255, 255));
        j9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j9MouseClicked(evt);
            }
        });
        j9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j9ActionPerformed(evt);
            }
        });
        jklPanel.add(j9);
        j9.setBounds(0, 320, 380, 40);

        j10.setEditable(false);
        j10.setBackground(new java.awt.Color(42, 42, 42));
        j10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j10.setForeground(new java.awt.Color(255, 255, 255));
        j10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j10MouseClicked(evt);
            }
        });
        j10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j10ActionPerformed(evt);
            }
        });
        jklPanel.add(j10);
        j10.setBounds(0, 360, 380, 40);

        j11.setEditable(false);
        j11.setBackground(new java.awt.Color(42, 42, 42));
        j11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j11.setForeground(new java.awt.Color(255, 255, 255));
        j11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j11MouseClicked(evt);
            }
        });
        j11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j11ActionPerformed(evt);
            }
        });
        jklPanel.add(j11);
        j11.setBounds(0, 400, 380, 40);

        j12.setEditable(false);
        j12.setBackground(new java.awt.Color(42, 42, 42));
        j12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        j12.setForeground(new java.awt.Color(255, 255, 255));
        j12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        j12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                j12MouseClicked(evt);
            }
        });
        j12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                j12ActionPerformed(evt);
            }
        });
        jklPanel.add(j12);
        j12.setBounds(0, 440, 380, 40);

        mainPnl.add(jklPanel);
        jklPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        mnoPanel.setLayout(null);

        m1.setEditable(false);
        m1.setBackground(new java.awt.Color(42, 42, 42));
        m1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m1.setForeground(new java.awt.Color(255, 255, 255));
        m1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m1MouseClicked(evt);
            }
        });
        m1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m1ActionPerformed(evt);
            }
        });
        mnoPanel.add(m1);
        m1.setBounds(0, 0, 380, 40);

        m2.setEditable(false);
        m2.setBackground(new java.awt.Color(42, 42, 42));
        m2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m2.setForeground(new java.awt.Color(255, 255, 255));
        m2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m2MouseClicked(evt);
            }
        });
        m2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m2ActionPerformed(evt);
            }
        });
        mnoPanel.add(m2);
        m2.setBounds(0, 40, 380, 40);

        m3.setEditable(false);
        m3.setBackground(new java.awt.Color(42, 42, 42));
        m3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m3.setForeground(new java.awt.Color(255, 255, 255));
        m3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m3MouseClicked(evt);
            }
        });
        m3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m3ActionPerformed(evt);
            }
        });
        mnoPanel.add(m3);
        m3.setBounds(0, 80, 380, 40);

        m4.setEditable(false);
        m4.setBackground(new java.awt.Color(42, 42, 42));
        m4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m4.setForeground(new java.awt.Color(255, 255, 255));
        m4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m4MouseClicked(evt);
            }
        });
        m4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m4ActionPerformed(evt);
            }
        });
        mnoPanel.add(m4);
        m4.setBounds(0, 120, 380, 40);

        m5.setEditable(false);
        m5.setBackground(new java.awt.Color(42, 42, 42));
        m5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m5.setForeground(new java.awt.Color(255, 255, 255));
        m5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m5MouseClicked(evt);
            }
        });
        m5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m5ActionPerformed(evt);
            }
        });
        mnoPanel.add(m5);
        m5.setBounds(0, 160, 380, 40);

        m6.setEditable(false);
        m6.setBackground(new java.awt.Color(42, 42, 42));
        m6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m6.setForeground(new java.awt.Color(255, 255, 255));
        m6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m6MouseClicked(evt);
            }
        });
        m6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m6ActionPerformed(evt);
            }
        });
        mnoPanel.add(m6);
        m6.setBounds(0, 200, 380, 40);

        m7.setEditable(false);
        m7.setBackground(new java.awt.Color(42, 42, 42));
        m7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m7.setForeground(new java.awt.Color(255, 255, 255));
        m7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m7MouseClicked(evt);
            }
        });
        m7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m7ActionPerformed(evt);
            }
        });
        mnoPanel.add(m7);
        m7.setBounds(0, 240, 380, 40);

        m8.setEditable(false);
        m8.setBackground(new java.awt.Color(42, 42, 42));
        m8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m8.setForeground(new java.awt.Color(255, 255, 255));
        m8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m8MouseClicked(evt);
            }
        });
        m8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m8ActionPerformed(evt);
            }
        });
        mnoPanel.add(m8);
        m8.setBounds(0, 280, 380, 40);

        m9.setEditable(false);
        m9.setBackground(new java.awt.Color(42, 42, 42));
        m9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m9.setForeground(new java.awt.Color(255, 255, 255));
        m9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m9MouseClicked(evt);
            }
        });
        m9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m9ActionPerformed(evt);
            }
        });
        mnoPanel.add(m9);
        m9.setBounds(0, 320, 380, 40);

        m10.setEditable(false);
        m10.setBackground(new java.awt.Color(42, 42, 42));
        m10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m10.setForeground(new java.awt.Color(255, 255, 255));
        m10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m10MouseClicked(evt);
            }
        });
        m10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m10ActionPerformed(evt);
            }
        });
        mnoPanel.add(m10);
        m10.setBounds(0, 360, 380, 40);

        m11.setEditable(false);
        m11.setBackground(new java.awt.Color(42, 42, 42));
        m11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m11.setForeground(new java.awt.Color(255, 255, 255));
        m11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m11MouseClicked(evt);
            }
        });
        m11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m11ActionPerformed(evt);
            }
        });
        mnoPanel.add(m11);
        m11.setBounds(0, 400, 380, 40);

        m12.setEditable(false);
        m12.setBackground(new java.awt.Color(42, 42, 42));
        m12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        m12.setForeground(new java.awt.Color(255, 255, 255));
        m12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        m12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                m12MouseClicked(evt);
            }
        });
        m12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m12ActionPerformed(evt);
            }
        });
        mnoPanel.add(m12);
        m12.setBounds(0, 440, 380, 40);

        mainPnl.add(mnoPanel);
        mnoPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        pqrPanel.setLayout(null);

        p1.setEditable(false);
        p1.setBackground(new java.awt.Color(42, 42, 42));
        p1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p1.setForeground(new java.awt.Color(255, 255, 255));
        p1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p1MouseClicked(evt);
            }
        });
        pqrPanel.add(p1);
        p1.setBounds(0, 0, 380, 40);

        p2.setEditable(false);
        p2.setBackground(new java.awt.Color(42, 42, 42));
        p2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p2.setForeground(new java.awt.Color(255, 255, 255));
        p2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p2MouseClicked(evt);
            }
        });
        p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2ActionPerformed(evt);
            }
        });
        pqrPanel.add(p2);
        p2.setBounds(0, 40, 380, 40);

        p3.setEditable(false);
        p3.setBackground(new java.awt.Color(42, 42, 42));
        p3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p3.setForeground(new java.awt.Color(255, 255, 255));
        p3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p3MouseClicked(evt);
            }
        });
        p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p3ActionPerformed(evt);
            }
        });
        pqrPanel.add(p3);
        p3.setBounds(0, 80, 380, 40);

        p4.setEditable(false);
        p4.setBackground(new java.awt.Color(42, 42, 42));
        p4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p4.setForeground(new java.awt.Color(255, 255, 255));
        p4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p4MouseClicked(evt);
            }
        });
        p4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p4ActionPerformed(evt);
            }
        });
        pqrPanel.add(p4);
        p4.setBounds(0, 120, 380, 40);

        p5.setEditable(false);
        p5.setBackground(new java.awt.Color(42, 42, 42));
        p5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p5.setForeground(new java.awt.Color(255, 255, 255));
        p5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p5MouseClicked(evt);
            }
        });
        p5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p5ActionPerformed(evt);
            }
        });
        pqrPanel.add(p5);
        p5.setBounds(0, 160, 380, 40);

        p6.setEditable(false);
        p6.setBackground(new java.awt.Color(42, 42, 42));
        p6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p6.setForeground(new java.awt.Color(255, 255, 255));
        p6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p6MouseClicked(evt);
            }
        });
        p6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p6ActionPerformed(evt);
            }
        });
        pqrPanel.add(p6);
        p6.setBounds(0, 200, 380, 40);

        p7.setEditable(false);
        p7.setBackground(new java.awt.Color(42, 42, 42));
        p7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p7.setForeground(new java.awt.Color(255, 255, 255));
        p7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p7MouseClicked(evt);
            }
        });
        p7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p7ActionPerformed(evt);
            }
        });
        pqrPanel.add(p7);
        p7.setBounds(0, 240, 380, 40);

        p8.setEditable(false);
        p8.setBackground(new java.awt.Color(42, 42, 42));
        p8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p8.setForeground(new java.awt.Color(255, 255, 255));
        p8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p8MouseClicked(evt);
            }
        });
        p8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p8ActionPerformed(evt);
            }
        });
        pqrPanel.add(p8);
        p8.setBounds(0, 280, 380, 40);

        p9.setEditable(false);
        p9.setBackground(new java.awt.Color(42, 42, 42));
        p9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p9.setForeground(new java.awt.Color(255, 255, 255));
        p9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p9MouseClicked(evt);
            }
        });
        p9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p9ActionPerformed(evt);
            }
        });
        pqrPanel.add(p9);
        p9.setBounds(0, 320, 380, 40);

        p10.setEditable(false);
        p10.setBackground(new java.awt.Color(42, 42, 42));
        p10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p10.setForeground(new java.awt.Color(255, 255, 255));
        p10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p10MouseClicked(evt);
            }
        });
        p10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p10ActionPerformed(evt);
            }
        });
        pqrPanel.add(p10);
        p10.setBounds(0, 360, 380, 40);

        p11.setEditable(false);
        p11.setBackground(new java.awt.Color(42, 42, 42));
        p11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p11.setForeground(new java.awt.Color(255, 255, 255));
        p11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p11MouseClicked(evt);
            }
        });
        p11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p11ActionPerformed(evt);
            }
        });
        pqrPanel.add(p11);
        p11.setBounds(0, 400, 380, 40);

        p12.setEditable(false);
        p12.setBackground(new java.awt.Color(42, 42, 42));
        p12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        p12.setForeground(new java.awt.Color(255, 255, 255));
        p12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p12MouseClicked(evt);
            }
        });
        p12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p12ActionPerformed(evt);
            }
        });
        pqrPanel.add(p12);
        p12.setBounds(0, 440, 380, 40);

        mainPnl.add(pqrPanel);
        pqrPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        stuPanel.setLayout(null);

        s1.setEditable(false);
        s1.setBackground(new java.awt.Color(42, 42, 42));
        s1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s1.setForeground(new java.awt.Color(255, 255, 255));
        s1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                s1MousePressed(evt);
            }
        });
        stuPanel.add(s1);
        s1.setBounds(0, 0, 380, 40);

        s2.setEditable(false);
        s2.setBackground(new java.awt.Color(42, 42, 42));
        s2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s2.setForeground(new java.awt.Color(255, 255, 255));
        s2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s2MouseClicked(evt);
            }
        });
        s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s2ActionPerformed(evt);
            }
        });
        stuPanel.add(s2);
        s2.setBounds(0, 40, 380, 40);

        s3.setEditable(false);
        s3.setBackground(new java.awt.Color(42, 42, 42));
        s3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s3.setForeground(new java.awt.Color(255, 255, 255));
        s3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s3MouseClicked(evt);
            }
        });
        s3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3ActionPerformed(evt);
            }
        });
        stuPanel.add(s3);
        s3.setBounds(0, 80, 380, 40);

        s4.setEditable(false);
        s4.setBackground(new java.awt.Color(42, 42, 42));
        s4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s4.setForeground(new java.awt.Color(255, 255, 255));
        s4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s4MouseClicked(evt);
            }
        });
        s4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s4ActionPerformed(evt);
            }
        });
        stuPanel.add(s4);
        s4.setBounds(0, 120, 380, 40);

        s5.setEditable(false);
        s5.setBackground(new java.awt.Color(42, 42, 42));
        s5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s5.setForeground(new java.awt.Color(255, 255, 255));
        s5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s5MouseClicked(evt);
            }
        });
        s5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s5ActionPerformed(evt);
            }
        });
        stuPanel.add(s5);
        s5.setBounds(0, 160, 380, 40);

        s6.setEditable(false);
        s6.setBackground(new java.awt.Color(42, 42, 42));
        s6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s6.setForeground(new java.awt.Color(255, 255, 255));
        s6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s6MouseClicked(evt);
            }
        });
        s6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s6ActionPerformed(evt);
            }
        });
        stuPanel.add(s6);
        s6.setBounds(0, 200, 380, 40);

        s7.setEditable(false);
        s7.setBackground(new java.awt.Color(42, 42, 42));
        s7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s7.setForeground(new java.awt.Color(255, 255, 255));
        s7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s7MouseClicked(evt);
            }
        });
        s7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s7ActionPerformed(evt);
            }
        });
        stuPanel.add(s7);
        s7.setBounds(0, 240, 380, 40);

        s8.setEditable(false);
        s8.setBackground(new java.awt.Color(42, 42, 42));
        s8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s8.setForeground(new java.awt.Color(255, 255, 255));
        s8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s8MouseClicked(evt);
            }
        });
        s8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s8ActionPerformed(evt);
            }
        });
        stuPanel.add(s8);
        s8.setBounds(0, 280, 380, 40);

        s9.setEditable(false);
        s9.setBackground(new java.awt.Color(42, 42, 42));
        s9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s9.setForeground(new java.awt.Color(255, 255, 255));
        s9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s9MouseClicked(evt);
            }
        });
        s9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s9ActionPerformed(evt);
            }
        });
        stuPanel.add(s9);
        s9.setBounds(0, 320, 380, 40);

        s10.setEditable(false);
        s10.setBackground(new java.awt.Color(42, 42, 42));
        s10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s10.setForeground(new java.awt.Color(255, 255, 255));
        s10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s10MouseClicked(evt);
            }
        });
        s10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s10ActionPerformed(evt);
            }
        });
        stuPanel.add(s10);
        s10.setBounds(0, 360, 380, 40);

        s11.setEditable(false);
        s11.setBackground(new java.awt.Color(42, 42, 42));
        s11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s11.setForeground(new java.awt.Color(255, 255, 255));
        s11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s11MouseClicked(evt);
            }
        });
        s11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s11ActionPerformed(evt);
            }
        });
        stuPanel.add(s11);
        s11.setBounds(0, 400, 380, 40);

        s12.setEditable(false);
        s12.setBackground(new java.awt.Color(42, 42, 42));
        s12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        s12.setForeground(new java.awt.Color(255, 255, 255));
        s12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        s12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                s12MouseClicked(evt);
            }
        });
        s12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s12ActionPerformed(evt);
            }
        });
        stuPanel.add(s12);
        s12.setBounds(0, 440, 380, 40);

        mainPnl.add(stuPanel);
        stuPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        vwxPanel.setLayout(null);

        v1.setEditable(false);
        v1.setBackground(new java.awt.Color(42, 42, 42));
        v1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v1.setForeground(new java.awt.Color(255, 255, 255));
        v1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                v1MousePressed(evt);
            }
        });
        vwxPanel.add(v1);
        v1.setBounds(0, 0, 380, 40);

        v2.setEditable(false);
        v2.setBackground(new java.awt.Color(42, 42, 42));
        v2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v2.setForeground(new java.awt.Color(255, 255, 255));
        v2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v2MouseClicked(evt);
            }
        });
        v2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v2ActionPerformed(evt);
            }
        });
        vwxPanel.add(v2);
        v2.setBounds(0, 40, 380, 40);

        v3.setEditable(false);
        v3.setBackground(new java.awt.Color(42, 42, 42));
        v3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v3.setForeground(new java.awt.Color(255, 255, 255));
        v3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v3MouseClicked(evt);
            }
        });
        v3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v3ActionPerformed(evt);
            }
        });
        vwxPanel.add(v3);
        v3.setBounds(0, 80, 380, 40);

        v4.setEditable(false);
        v4.setBackground(new java.awt.Color(42, 42, 42));
        v4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v4.setForeground(new java.awt.Color(255, 255, 255));
        v4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v4MouseClicked(evt);
            }
        });
        v4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v4ActionPerformed(evt);
            }
        });
        vwxPanel.add(v4);
        v4.setBounds(0, 120, 380, 40);

        v5.setEditable(false);
        v5.setBackground(new java.awt.Color(42, 42, 42));
        v5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v5.setForeground(new java.awt.Color(255, 255, 255));
        v5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v5MouseClicked(evt);
            }
        });
        v5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v5ActionPerformed(evt);
            }
        });
        vwxPanel.add(v5);
        v5.setBounds(0, 160, 380, 40);

        v6.setEditable(false);
        v6.setBackground(new java.awt.Color(42, 42, 42));
        v6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v6.setForeground(new java.awt.Color(255, 255, 255));
        v6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v6MouseClicked(evt);
            }
        });
        v6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v6ActionPerformed(evt);
            }
        });
        vwxPanel.add(v6);
        v6.setBounds(0, 200, 380, 40);

        v7.setEditable(false);
        v7.setBackground(new java.awt.Color(42, 42, 42));
        v7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v7.setForeground(new java.awt.Color(255, 255, 255));
        v7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v7MouseClicked(evt);
            }
        });
        v7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v7ActionPerformed(evt);
            }
        });
        vwxPanel.add(v7);
        v7.setBounds(0, 240, 380, 40);

        v8.setEditable(false);
        v8.setBackground(new java.awt.Color(42, 42, 42));
        v8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v8.setForeground(new java.awt.Color(255, 255, 255));
        v8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v8MouseClicked(evt);
            }
        });
        v8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v8ActionPerformed(evt);
            }
        });
        vwxPanel.add(v8);
        v8.setBounds(0, 280, 380, 40);

        v9.setEditable(false);
        v9.setBackground(new java.awt.Color(42, 42, 42));
        v9.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v9.setForeground(new java.awt.Color(255, 255, 255));
        v9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v9MouseClicked(evt);
            }
        });
        v9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v9ActionPerformed(evt);
            }
        });
        vwxPanel.add(v9);
        v9.setBounds(0, 320, 380, 40);

        v10.setEditable(false);
        v10.setBackground(new java.awt.Color(42, 42, 42));
        v10.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v10.setForeground(new java.awt.Color(255, 255, 255));
        v10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v10MouseClicked(evt);
            }
        });
        v10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v10ActionPerformed(evt);
            }
        });
        vwxPanel.add(v10);
        v10.setBounds(0, 360, 380, 40);

        v11.setEditable(false);
        v11.setBackground(new java.awt.Color(42, 42, 42));
        v11.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v11.setForeground(new java.awt.Color(255, 255, 255));
        v11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v11MouseClicked(evt);
            }
        });
        v11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v11ActionPerformed(evt);
            }
        });
        vwxPanel.add(v11);
        v11.setBounds(0, 400, 380, 40);

        v12.setEditable(false);
        v12.setBackground(new java.awt.Color(42, 42, 42));
        v12.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        v12.setForeground(new java.awt.Color(255, 255, 255));
        v12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        v12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                v12MouseClicked(evt);
            }
        });
        v12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                v12ActionPerformed(evt);
            }
        });
        vwxPanel.add(v12);
        v12.setBounds(0, 440, 380, 40);

        mainPnl.add(vwxPanel);
        vwxPanel.setBounds(350, 170, 380, 480);

        defPanel.setVisible(false);
        yzPanel.setLayout(null);

        y1.setEditable(false);
        y1.setBackground(new java.awt.Color(42, 42, 42));
        y1.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y1.setForeground(new java.awt.Color(255, 255, 255));
        y1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                y1MousePressed(evt);
            }
        });
        yzPanel.add(y1);
        y1.setBounds(0, 0, 380, 40);

        y2.setEditable(false);
        y2.setBackground(new java.awt.Color(42, 42, 42));
        y2.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y2.setForeground(new java.awt.Color(255, 255, 255));
        y2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y2MouseClicked(evt);
            }
        });
        y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y2ActionPerformed(evt);
            }
        });
        yzPanel.add(y2);
        y2.setBounds(0, 40, 380, 40);

        y3.setEditable(false);
        y3.setBackground(new java.awt.Color(42, 42, 42));
        y3.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y3.setForeground(new java.awt.Color(255, 255, 255));
        y3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y3MouseClicked(evt);
            }
        });
        y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y3ActionPerformed(evt);
            }
        });
        yzPanel.add(y3);
        y3.setBounds(0, 80, 380, 40);

        y4.setEditable(false);
        y4.setBackground(new java.awt.Color(42, 42, 42));
        y4.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y4.setForeground(new java.awt.Color(255, 255, 255));
        y4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y4MouseClicked(evt);
            }
        });
        y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y4ActionPerformed(evt);
            }
        });
        yzPanel.add(y4);
        y4.setBounds(0, 120, 380, 40);

        y5.setEditable(false);
        y5.setBackground(new java.awt.Color(42, 42, 42));
        y5.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y5.setForeground(new java.awt.Color(255, 255, 255));
        y5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y5MouseClicked(evt);
            }
        });
        y5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y5ActionPerformed(evt);
            }
        });
        yzPanel.add(y5);
        y5.setBounds(0, 160, 380, 40);

        y6.setEditable(false);
        y6.setBackground(new java.awt.Color(42, 42, 42));
        y6.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y6.setForeground(new java.awt.Color(255, 255, 255));
        y6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y6MouseClicked(evt);
            }
        });
        y6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y6ActionPerformed(evt);
            }
        });
        yzPanel.add(y6);
        y6.setBounds(0, 200, 380, 40);

        y7.setEditable(false);
        y7.setBackground(new java.awt.Color(42, 42, 42));
        y7.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y7.setForeground(new java.awt.Color(255, 255, 255));
        y7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y7MouseClicked(evt);
            }
        });
        y7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y7ActionPerformed(evt);
            }
        });
        yzPanel.add(y7);
        y7.setBounds(0, 240, 380, 40);

        y8.setEditable(false);
        y8.setBackground(new java.awt.Color(42, 42, 42));
        y8.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        y8.setForeground(new java.awt.Color(255, 255, 255));
        y8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        y8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                y8MouseClicked(evt);
            }
        });
        y8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y8ActionPerformed(evt);
            }
        });
        yzPanel.add(y8);
        y8.setBounds(0, 280, 380, 40);

        zebraOld.setEditable(false);
        zebraOld.setBackground(new java.awt.Color(42, 42, 42));
        zebraOld.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        zebraOld.setForeground(new java.awt.Color(255, 255, 255));
        zebraOld.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        zebraOld.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zebraOldMouseClicked(evt);
            }
        });
        zebraOld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zebraOldActionPerformed(evt);
            }
        });
        yzPanel.add(zebraOld);
        zebraOld.setBounds(0, 320, 380, 160);

        mainPnl.add(yzPanel);
        yzPanel.setBounds(350, 170, 380, 480);

        radioEng.setBackground(new java.awt.Color(42, 42, 42));
        buttonGroup.add(radioEng);
        radioEng.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        radioEng.setForeground(new java.awt.Color(255, 255, 255));
        radioEng.setText("English");
        radioEng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioEngActionPerformed(evt);
            }
        });
        mainPnl.add(radioEng);
        radioEng.setBounds(90, 470, 160, 40);

        radioInd.setBackground(new java.awt.Color(42, 42, 42));
        buttonGroup.add(radioInd);
        radioInd.setFont(new java.awt.Font("Fira Sans", 0, 18)); // NOI18N
        radioInd.setForeground(new java.awt.Color(255, 255, 255));
        radioInd.setText("Indonesian");
        radioInd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioIndActionPerformed(evt);
            }
        });
        mainPnl.add(radioInd);
        radioInd.setBounds(90, 410, 160, 40);

        searchPnl.setBackground(new java.awt.Color(42, 42, 42));
        searchPnl.setForeground(new java.awt.Color(255, 255, 255));
        searchPnl.setPreferredSize(new java.awt.Dimension(510, 101));
        searchPnl.setLayout(null);

        res.setEditable(false);
        res.setBackground(new java.awt.Color(42, 42, 42));
        res.setFont(new java.awt.Font("Fira Sans", 0, 30)); // NOI18N
        res.setForeground(new java.awt.Color(255, 255, 255));
        res.setText("Translate to English");
        res.setBorder(null);
        res.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resMouseClicked(evt);
            }
        });
        searchPnl.add(res);
        res.setBounds(26, -1, 460, 100);

        mainPnl.add(searchPnl);
        searchPnl.setBounds(790, 559, 510, 101);

        switchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/4. switch_button.png"))); // NOI18N
        switchBtn.setBorder(null);
        switchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        switchBtn.setOpaque(false);
        switchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                switchBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                switchBtnMouseExited(evt);
            }
        });
        mainPnl.add(switchBtn);
        switchBtn.setBounds(970, 405, 140, 130);

        translateBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/1. Translate Background.png"))); // NOI18N
        translateBG.setAlignmentY(0.0F);
        translateBG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                translateBGMouseClicked(evt);
            }
        });
        mainPnl.add(translateBG);
        translateBG.setBounds(0, 0, 1540, 840);

        getContentPane().add(mainPnl);
        mainPnl.setBounds(0, 0, 1540, 840);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void translateBGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_translateBGMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_translateBGMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        setVisible(false);
        new UI().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_backMouseClicked

    private void mainPnlMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPnlMouseEntered
       
             // TODO add your handling code here:
    }//GEN-LAST:event_mainPnlMouseEntered

    private void abcBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abcBtnMouseClicked
        
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(true);
        //abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
        if (radioEng.isSelected()){
        String sqlAbdication = "SELECT words FROM dictionary where words = 'abdication'";
        String sqlAdvances = "SELECT words FROM dictionary where words = 'advances'";
        String sqlAdventure = "SELECT words FROM dictionary where words = 'adventure'";
        String sqlAmong = "SELECT words FROM dictionary where words = 'among'";
        String sqlBackboard = "SELECT words FROM dictionary where words = 'backboard'";
        String sqlBankrupt = "SELECT words FROM dictionary where words = 'bankrupt'";
        String sqlBiscuit = "SELECT words FROM dictionary where words = 'biscuit'";
        String sqlBulkUp = "SELECT words FROM dictionary where words = 'bulk up'";
        String sqlCactus = "SELECT words FROM dictionary where words = 'cactus'";
        String sqlCashback = "SELECT words FROM dictionary where words = 'cashback'";
        String sqlCheerlead = "SELECT words FROM dictionary where words = 'cheerlead'";
        String sqlCommbank = "SELECT words FROM dictionary where words = 'commercial bank'";
        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlAbdication);
              a1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }//GEN-LAST:event_abcBtnMouseClicked
       try {
            
             Statement stmt  = conn.createStatement();
              rs   = stmt.executeQuery(sqlAdventure);
             
              a3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlAmong);
            
             ResultSetMetaData rsmd = rs.getMetaData();
                    a4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
            rs   = stmt.executeQuery(sqlAdvances);
             ResultSetMetaData rsmd = rs.getMetaData();
                    a2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBackboard);
             ResultSetMetaData rsmd = rs.getMetaData();
                    a5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBankrupt);
                    a6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBiscuit);
                    a7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBulkUp);
                    a8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCactus);
                    a9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCashback);
                    a10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCheerlead);
                    a11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCommbank);
                    a12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }  
    
    
    
    
        }
        else if (radioInd.isSelected()) {
        String sqlAbdication = "SELECT meaning FROM dictionary where meaning = 'abdikasi'";
        String sqlAdvances = "SELECT meaning FROM dictionary where meaning = 'alat menguap'";
        String sqlAdventure = "SELECT meaning FROM dictionary where meaning = 'angin barat'";
        String sqlAmong = "SELECT meaning FROM dictionary where meaning = 'antara'";
        String sqlBackboard = "SELECT meaning FROM dictionary where meaning = 'asam xenat'";
        String sqlBankrupt = "SELECT meaning FROM dictionary where meaning = 'bakat'";
        String sqlBiscuit = "SELECT meaning FROM dictionary where meaning = 'bangkrut'";
        String sqlBulkUp = "SELECT meaning FROM dictionary where meaning = 'Bank komersil'";
        String sqlCactus = "SELECT meaning FROM dictionary where meaning = 'basah'";
        String sqlCashback = "SELECT meaning FROM dictionary where meaning = 'belalang'";
        String sqlCheerlead = "SELECT meaning FROM dictionary where meaning = 'berlebihan'";
        String sqlCommbank = "SELECT meaning FROM dictionary where meaning = 'bernyanyi yodel'";
        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlAbdication);
              a1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlAdvances);
              a3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlAdventure);
             ResultSetMetaData rsmd = rs.getMetaData();
                    a4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlAmong);
             ResultSetMetaData rsmd = rs.getMetaData();
                    a2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBackboard);
             ResultSetMetaData rsmd = rs.getMetaData();
                    a5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBankrupt);
                    a6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBiscuit);
                    a7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlBulkUp);
                    a8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCactus);
                    a9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCashback);
                    a10.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCheerlead);
                    a11.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlCommbank);
                    a12.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }  
        }
    }
    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a1ActionPerformed

    private void a3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a3ActionPerformed

    private void a2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a2ActionPerformed

    private void a4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a4ActionPerformed

    private void a5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a5ActionPerformed

    private void a6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a6ActionPerformed

    private void a7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a7ActionPerformed

    private void a8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a8ActionPerformed

    private void a9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a9ActionPerformed

    private void a10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a10ActionPerformed

    private void a11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a11ActionPerformed

    private void a12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_a12ActionPerformed

    private void pqrBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pqrBtnMouseClicked
        
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(true);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
        if (radioEng.isSelected()){
        String sqlpaddle = "SELECT words FROM dictionary where words = 'paddle'";
        String sqlPaddy = "SELECT words FROM dictionary where words = 'paddy'";
        String sqlPrinter = "SELECT words FROM dictionary where words = 'printer'";
        String sqlPage = "SELECT words FROM dictionary where words = 'page'";
        String sqlQuantum = "SELECT words FROM dictionary where words = 'quantum'";
        String sqlQuantity = "SELECT words FROM dictionary where words = 'quantity'";
        String sqlQuality = "SELECT words FROM dictionary where words = 'quality'";
        String sqlQuote = "SELECT words FROM dictionary where words = 'quote'";
        String sqlRacket = "SELECT words FROM dictionary where words = 'racket'";
        String sqlRack = "SELECT words FROM dictionary where words = 'rack'";
        String sqlRaccoon = "SELECT words FROM dictionary where words = 'raccoon'";
        String sqlRagDoll = "SELECT words FROM dictionary where words = 'rag doll'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlpaddle);
              p1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlPaddy);
              p2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlPrinter);
             ResultSetMetaData rsmd = rs.getMetaData();
                    p3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlPage);
             ResultSetMetaData rsmd = rs.getMetaData();
                 p4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuantum);
             ResultSetMetaData rsmd = rs.getMetaData();
                   p5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuantity);
                   p6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuality);
                    p7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuote);
                    p8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRacket);
                   p9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRack);
                    p10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRaccoon);
                   p11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRagDoll);
                    p12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }
        }  
        else if (radioInd.isSelected()){
        String sqlpaddle = "SELECT meaning FROM dictionary where meaning = 'padi'";
        String sqlPaddy = "SELECT meaning FROM dictionary where meaning = 'pancing'";
        String sqlPrinter = "SELECT meaning FROM dictionary where meaning = 'papan belakang'";
        String sqlPage = "SELECT meaning FROM dictionary where meaning = 'pelana'";
        String sqlQuantum = "SELECT meaning FROM dictionary where meaning = 'pelayan'";
        String sqlQuantity = "SELECT meaning FROM dictionary where meaning = 'pemandu sorak'";
        String sqlQuality = "SELECT meaning FROM dictionary where meaning = 'pencetak'";
        String sqlQuote = "SELECT meaning FROM dictionary where meaning = 'pertengkaran'";
        String sqlRacket = "SELECT meaning FROM dictionary where meaning = 'rakun'";
        String sqlRack = "SELECT meaning FROM dictionary where meaning = 'rindu'";
        String sqlRaccoon = "SELECT meaning FROM dictionary where meaning = 'roti jahe'";
        String sqlRagDoll = "SELECT meaning FROM dictionary where meaning = 'rumah sakit'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlpaddle);
              p1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlPaddy);
              p2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlPrinter);
             ResultSetMetaData rsmd = rs.getMetaData();
                    p3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlPage);
             ResultSetMetaData rsmd = rs.getMetaData();
                 p4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuantum);
             ResultSetMetaData rsmd = rs.getMetaData();
                   p5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuantity);
                   p6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuality);
                    p7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlQuote);
                    p8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRacket);
                   p9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRack);
                    p10.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRaccoon);
                   p11.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlRagDoll);
                    p12.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }} // TODO add your handling code here:
    }//GEN-LAST:event_pqrBtnMouseClicked

    private void yzBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yzBtnMouseClicked
        
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(true);
         if (radioEng.isSelected()){
        String sqlYellow = "SELECT words FROM dictionary where words = 'yellow'";
        String sqlYodel = "SELECT words FROM dictionary where words = 'yodel'";
        String sqlYacht = "SELECT words FROM dictionary where words = 'yacht'";
        String sqlYak = "SELECT words FROM dictionary where words = 'yak'";
        String sqlZephyr = "SELECT words FROM dictionary where words = 'zephyr'";
        String sqlZero = "SELECT words FROM dictionary where words = 'zero'";
        String sqlZap = "SELECT words FROM dictionary where words = 'zap'";
        String sqlZebra = "SELECT words FROM dictionary where words = 'zebra'";
      
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlYellow);
              y1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlYodel);
              y2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlYacht);
             ResultSetMetaData rsmd = rs.getMetaData();
                    y3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlYak);
             ResultSetMetaData rsmd = rs.getMetaData();
                 y4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlZephyr);
             ResultSetMetaData rsmd = rs.getMetaData();
                   y5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlZero);
                  y6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlZap);
                   y7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlZebra);
                    y8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    } } else if (radioInd.isSelected()){
        String sqlYellow = "SELECT meaning FROM dictionary where meaning = 'zebra'";
        
      
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlYellow);
              y1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
        }   
      
     
                 // TODO add your handling code here:
    }//GEN-LAST:event_yzBtnMouseClicked

    private void defBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_defBtnMouseClicked
       
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(true);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
        if (radioEng.isSelected()){ 
        String sqlDepressive = "SELECT words FROM dictionary where words = 'depressive'";
        String sqlDispensator = "SELECT words FROM dictionary where words = 'dispensator'";
        String sqlDrugEruption = "SELECT words FROM dictionary where words = 'drug eruption'";
        String sqlDuplicate = "SELECT words FROM dictionary where words = 'duplicate'";
        String sqlEasily = "SELECT words FROM dictionary where words = 'easily'";
        String sqlEvaporator = "SELECT words FROM dictionary where words = 'evaporator'";
        String sqlExaggerate = "SELECT words FROM dictionary where words = 'exaggerate'";
        String sqlExtreme = "SELECT words FROM dictionary where words = 'extreme'";
        String sqlFactionalize = "SELECT words FROM dictionary where words = 'factionalize'";
        String sqlFishline = "SELECT words FROM dictionary where words = 'fishline'";
        String sqlFourball = "SELECT words FROM dictionary where words = 'fourball'";
        String sqlFoxBrush = "SELECT words FROM dictionary where words = 'fox brush'";
       
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlDepressive);
              d1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlDispensator);
              d2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlDrugEruption);
             ResultSetMetaData rsmd = rs.getMetaData();
                    d3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlDuplicate);
             ResultSetMetaData rsmd = rs.getMetaData();
                    d4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlEasily);
             ResultSetMetaData rsmd = rs.getMetaData();
                   d5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlEvaporator);
                   d6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlExaggerate);
                    d7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlExtreme);
                    d8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFactionalize);
                   d9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFishline);
                    d10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFourball);
                    d11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFoxBrush);
                    d12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }
        }
        else if (radioInd.isSelected()) {
        String sqlDepressive = "SELECT meaning FROM dictionary where meaning = 'dapur'";
        String sqlDispensator = "SELECT meaning FROM dictionary where meaning = 'dayung'";
        String sqlDrugEruption = "SELECT meaning FROM dictionary where meaning = 'dengan mudah'";
        String sqlDuplicate = "SELECT meaning FROM dictionary where meaning = 'depresif'";
        String sqlEasily = "SELECT meaning FROM dictionary where meaning = 'dispensator'";
        String sqlEvaporator = "SELECT meaning FROM dictionary where meaning = 'domba gunung'";
        String sqlExaggerate = "SELECT meaning FROM dictionary where meaning = 'duplikat'";
        String sqlExtreme = "SELECT meaning FROM dictionary where meaning = 'ek'";
        String sqlFactionalize = "SELECT meaning FROM dictionary where meaning = 'ekstrim'";
        String sqlFishline = "SELECT meaning FROM dictionary where meaning = 'erupsi obat'";
        String sqlFourball = "SELECT meaning FROM dictionary where meaning = 'es krim'";
        String sqlFoxBrush = "SELECT meaning FROM dictionary where meaning = 'fourball'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlDepressive);
              d1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlDispensator);
              d2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlDrugEruption);
             ResultSetMetaData rsmd = rs.getMetaData();
                    d3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlDuplicate);
             ResultSetMetaData rsmd = rs.getMetaData();
                    d4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlEasily);
             ResultSetMetaData rsmd = rs.getMetaData();
                   d5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlEvaporator);
                   d6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlExaggerate);
                    d7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlExtreme);
                    d8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFactionalize);
                   d9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFishline);
                    d10.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFourball);
                    d11.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlFoxBrush);
                    d12.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_defBtnMouseClicked

    private void ghiBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ghiBtnMouseClicked
       
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(true);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
        if (radioEng.isSelected()){
        String sqlGingerbread = "SELECT words FROM dictionary where words = 'gingerbread'";
        String sqlGrasshopper = "SELECT words FROM dictionary where words = 'grasshopper'";
        String sqlGravity = "SELECT words FROM dictionary where words = 'gravity'";
        String sqlGalactic = "SELECT words FROM dictionary where words = 'galactic'";
        String sqlHabitat = "SELECT words FROM dictionary where words = 'habitat'";
        String sqlHelping = "SELECT words FROM dictionary where words = 'helping'";
        String sqlHolistic = "SELECT words FROM dictionary where words = 'holistic'";
        String sqlHomesick = "SELECT words FROM dictionary where words = 'homesick'";
        String sqlIceCream = "SELECT words FROM dictionary where words = 'ice cream'";
        String sqlInfinitive = "SELECT words FROM dictionary where words = 'infinitive'";
        String sqlInfirmary = "SELECT words FROM dictionary where words = 'infirmary'";
        String sqlInhalation = "SELECT words FROM dictionary where words = 'inhalation'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlGingerbread);
              g1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlGrasshopper);
             g2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlGravity);
             ResultSetMetaData rsmd = rs.getMetaData();
                   g3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlGalactic);
             ResultSetMetaData rsmd = rs.getMetaData();
                    g4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHabitat);
             ResultSetMetaData rsmd = rs.getMetaData();
                   g5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHelping);
                   g6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHolistic);
                    g7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHomesick);
                   g8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlIceCream);
                  g9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlInfinitive);
                   g10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlInfirmary);
                    g11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlInhalation);
                   g12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }
        }
       else if (radioInd.isSelected()){
        String sqlGingerbread = "SELECT meaning FROM dictionary where meaning = 'galaksi'";
        String sqlGrasshopper = "SELECT meaning FROM dictionary where meaning = 'gitar kecil'";
        String sqlGravity = "SELECT meaning FROM dictionary where meaning = 'gravitasi'";
        String sqlGalactic = "SELECT meaning FROM dictionary where meaning = 'gula-gula'";
        String sqlHabitat = "SELECT meaning FROM dictionary where meaning = 'habitat'";
        String sqlHelping = "SELECT meaning FROM dictionary where meaning = 'hanya'";
        String sqlHolistic = "SELECT meaning FROM dictionary where meaning = 'ikan oar'";
        String sqlHomesick = "SELECT meaning FROM dictionary where meaning = 'infinitif'";
        String sqlIceCream = "SELECT meaning FROM dictionary where meaning = 'inhalasi'";
       
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlGingerbread);
              g1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlGrasshopper);
             g2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlGravity);
             ResultSetMetaData rsmd = rs.getMetaData();
                   g3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlGalactic);
             ResultSetMetaData rsmd = rs.getMetaData();
                    g4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHabitat);
             ResultSetMetaData rsmd = rs.getMetaData();
                   g5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHelping);
                   g6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHolistic);
                    g7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlHomesick);
                   g8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlIceCream);
                  g9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
            
                   g10.setText("");
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             
                    g11.setText("");
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             
                   g12.setText("");
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}       // TODO add your handling code here:
    }//GEN-LAST:event_ghiBtnMouseClicked

    private void jklBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jklBtnMouseClicked
     
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(true);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
         if (radioEng.isSelected()){
        String sqlJailbreak = "SELECT words FROM dictionary where words = 'jailbreak'";
        String sqlJust = "SELECT words FROM dictionary where words = 'just'";
        String sqlJustify = "SELECT words FROM dictionary where words = 'justify'";
        String sqlJam = "SELECT words FROM dictionary where words = 'jam'";
        String sqlKitchen = "SELECT words FROM dictionary where words = 'kitchen'";
        String sqlKnee = "SELECT words FROM dictionary where words = 'knee'";
        String sqlKnob = "SELECT words FROM dictionary where words = 'knob'";
        String sqlKnowledgeable = "SELECT words FROM dictionary where words = 'knowledgeable'";
        String sqlLack = "SELECT words FROM dictionary where words = 'lack'";
        String sqlLaugh = "SELECT words FROM dictionary where words = 'laugh'";
        String sqlLice = "SELECT words FROM dictionary where words = 'lice'";
        String sqlLonk = "SELECT words FROM dictionary where words = 'lonk'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlJailbreak);
              j1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlJust);
            j2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlJustify);
             ResultSetMetaData rsmd = rs.getMetaData();
                   j3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlJam);
             ResultSetMetaData rsmd = rs.getMetaData();
                    j4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKitchen);
             ResultSetMetaData rsmd = rs.getMetaData();
                  j5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKnee);
                 j6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKnob);
                    j7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKnowledgeable);
                   j8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLack);
                  j9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLaugh);
                   j10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLice);
                   j11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLonk);
                   j12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }
            }
        else if (radioInd.isSelected()){
        String sqlJailbreak = "SELECT meaning FROM dictionary where meaning = 'jalan'";
        String sqlJust = "SELECT meaning FROM dictionary where meaning = 'jelek'";
        String sqlJustify = "SELECT meaning FROM dictionary where meaning = 'kacang'";
        String sqlJam = "SELECT meaning FROM dictionary where meaning = 'kaktus'";
        String sqlKitchen = "SELECT meaning FROM dictionary where meaning = 'kapal pesiar'";
        String sqlKnee = "SELECT meaning FROM dictionary where meaning = 'kekurangan'";
        String sqlKnob = "SELECT meaning FROM dictionary where meaning = 'kemacetan'";
        String sqlKnowledgeable = "SELECT meaning FROM dictionary where meaning = 'keributan'";
        String sqlLack = "SELECT meaning FROM dictionary where meaning = 'lembah'";
        String sqlLaugh = "SELECT meaning FROM dictionary where meaning = 'lembu berbulu panjang'";
        String sqlLice = "SELECT meaning FROM dictionary where meaning = 'lugu'";
        String sqlLonk = "SELECT meaning FROM dictionary where meaning = 'lutut'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlJailbreak);
              j1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlJust);
            j2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlJustify);
             ResultSetMetaData rsmd = rs.getMetaData();
                   j3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlJam);
             ResultSetMetaData rsmd = rs.getMetaData();
                    j4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKitchen);
             ResultSetMetaData rsmd = rs.getMetaData();
                  j5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKnee);
                 j6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKnob);
                    j7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlKnowledgeable);
                   j8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLack);
                  j9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLaugh);
                   j10.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLice);
                   j11.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlLonk);
                   j12.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_jklBtnMouseClicked

    private void mnoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnoBtnMouseClicked
        
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(true);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
         if (radioEng.isSelected()){
        String sqlMachine = "SELECT words FROM dictionary where words = 'machine'";
        String sqlMare = "SELECT words FROM dictionary where words = 'mare'";
        String sqlMegapixel = "SELECT words FROM dictionary where words = 'megapixel'";
        String sqlMillenary = "SELECT words FROM dictionary where words = 'millenary'";
        String sqlNaive = "SELECT words FROM dictionary where words = 'naive'";
        String sqlNaked = "SELECT words FROM dictionary where words = 'naked'";
        String sqlNotorious = "SELECT words FROM dictionary where words = 'notorious'";
        String sqlNut = "SELECT words FROM dictionary where words = 'nut'";
        String sqlOak = "SELECT words FROM dictionary where words = 'oak'";
        String sqlOarfish = "SELECT words FROM dictionary where words = 'oarfish'";
        String sqlOpaque = "SELECT words FROM dictionary where words = 'opaque'";
        String sqlOblige = "SELECT words FROM dictionary where words = 'oblige'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlMachine);
              m1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlMare);
              m2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlMegapixel);
             ResultSetMetaData rsmd = rs.getMetaData();
                    m3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlMillenary);
             ResultSetMetaData rsmd = rs.getMetaData();
                 m4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNaive);
             ResultSetMetaData rsmd = rs.getMetaData();
                   m5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNaked);
                   m6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNotorious);
                    m7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNut);
                    m8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOak);
                   m9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOarfish);
                    m10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOpaque);
                   m11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOblige);
                    m12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }
         } else if (radioInd.isSelected()){
        String sqlMachine = "SELECT meaning FROM dictionary where meaning = 'maag'";
        String sqlMare = "SELECT meaning FROM dictionary where meaning = 'massal'";
        String sqlMegapixel = "SELECT meaning FROM dictionary where meaning = 'megapiksel'";
        String sqlMillenary = "SELECT meaning FROM dictionary where meaning = 'membantu'";
        String sqlNaive = "SELECT meaning FROM dictionary where meaning = 'membenarkan'";
        String sqlNaked = "SELECT meaning FROM dictionary where meaning = 'memeriksa'";
        String sqlNotorious = "SELECT meaning FROM dictionary where meaning = 'memfaksi'";
        String sqlNut = "SELECT meaning FROM dictionary where meaning = 'menyeluruh'";
        String sqlOak = "SELECT meaning FROM dictionary where meaning = 'mesin'";
        String sqlOarfish = "SELECT meaning FROM dictionary where meaning = 'muka'";
        String sqlOpaque = "SELECT meaning FROM dictionary where meaning = 'nol'";
      
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlMachine);
              m1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlMare);
              m2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlMegapixel);
             ResultSetMetaData rsmd = rs.getMetaData();
                    m3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlMillenary);
             ResultSetMetaData rsmd = rs.getMetaData();
                 m4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNaive);
             ResultSetMetaData rsmd = rs.getMetaData();
                   m5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNaked);
                   m6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNotorious);
                    m7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlNut);
                    m8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOak);
                   m9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOarfish);
                    m10.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlOpaque);
                   m11.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
           
                    m12.setText("");
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
         }                   // TODO add your handling code here:
    }//GEN-LAST:event_mnoBtnMouseClicked

    private void vwxBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vwxBtnMouseClicked
       
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(false);
        vwxPanel.setVisible(true);
        yzPanel.setVisible(false);
        if (radioEng.isSelected()){    
        String sqlVacant = "SELECT words FROM dictionary where words = 'vacant'";
        String sqlVale = "SELECT words FROM dictionary where words = 'vale'";
        String sqlVeil = "SELECT words FROM dictionary where words = 'veil'";
        String sqlVet = "SELECT words FROM dictionary where words = 'vet'";
        String sqlWaiter = "SELECT words FROM dictionary where words = 'waiter'";
        String sqlWet = "SELECT words FROM dictionary where words = 'wet'";
        String sqlWalk = "SELECT words FROM dictionary where words = 'walk'";
        String sqlWheelchair = "SELECT words FROM dictionary where words = 'wheelchair'";
        String sqlXray = "SELECT words FROM dictionary where words = 'x-ray'";
        String sqlXylitol = "SELECT words FROM dictionary where words = 'xylitol'";
        String sqlXenophile = "SELECT words FROM dictionary where words = 'xenophile'";
        String sqlXenicAcid= "SELECT words FROM dictionary where words = 'xenic acid'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlVacant);
              v1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlVale);
              v2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlVeil);
             ResultSetMetaData rsmd = rs.getMetaData();
                    v3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlVet);
             ResultSetMetaData rsmd = rs.getMetaData();
                 v4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlWaiter);
             ResultSetMetaData rsmd = rs.getMetaData();
                   v5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlWet);
                   v6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlWalk);
                    v7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlWheelchair);
                    v8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlXray);
                   v9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlXylitol);
                    v10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlXenophile);
                   v11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlXenicAcid);
                    v12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
        String sqlVacant = "SELECT meaning FROM dictionary where meaning = 'wajib'";
        String sqlVale = "SELECT meaning FROM dictionary where meaning = 'xenofil'";
        String sqlVeil = "SELECT meaning FROM dictionary where meaning = 'xylitol'";
        
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlVacant);
              v1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlVale);
              v2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlVeil);
             ResultSetMetaData rsmd = rs.getMetaData();
                    v3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       } // TODO add your handling code here:
    }//GEN-LAST:event_vwxBtnMouseClicked

    private void stuBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stuBtnMouseClicked
       
        placeholderPnl.setVisible(false);
        abcPanel.setVisible(false);
        defPanel.setVisible(false);
        ghiPanel.setVisible(false);
        jklPanel.setVisible(false);
        mnoPanel.setVisible(false);
        pqrPanel.setVisible(false);
        stuPanel.setVisible(true);
        vwxPanel.setVisible(false);
        yzPanel.setVisible(false);
         if (radioEng.isSelected()){
        String sqlSabbath = "SELECT words FROM dictionary where words = 'sabbath'";
        String sqlSacral = "SELECT words FROM dictionary where words = 'sacral'";
        String sqlSound = "SELECT words FROM dictionary where words = 'sound'";
        String sqlSaddle = "SELECT words FROM dictionary where words = 'saddle'";
        String sqlTalent = "SELECT words FROM dictionary where words = 'talent'";
        String sqlTactile = "SELECT words FROM dictionary where words = 'tactile'";
        String sqlTachyon = "SELECT words FROM dictionary where words = 'tachyon'";
        String sqlTaffy = "SELECT words FROM dictionary where words = 'taffy'";
        String sqlUkulele = "SELECT words FROM dictionary where words = 'ukulele'";
        String sqlUlcer = "SELECT words FROM dictionary where words = 'ulcer'";
        String sqlUltimate = "SELECT words FROM dictionary where words = 'ultimate'";
        String sqlUgly = "SELECT words FROM dictionary where words = 'ugly'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlSabbath);
              s1.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlSacral);
              s2.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlSound);
             ResultSetMetaData rsmd = rs.getMetaData();
                    s3.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlSaddle);
             ResultSetMetaData rsmd = rs.getMetaData();
                 s4.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTalent);
             ResultSetMetaData rsmd = rs.getMetaData();
                   s5.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTactile);
                   s6.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTachyon);
                    s7.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTaffy);
                    s8.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUkulele);
                   s9.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUlcer);
                    s10.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUltimate);
                   s11.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUgly);
                    s12.setText(rs.getString("words"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
         }  else if (radioInd.isSelected()) {
        String sqlSabbath = "SELECT meaning FROM dictionary where meaning = 'sabat'";
        String sqlSacral = "SELECT meaning FROM dictionary where meaning = 'sakral'";
        String sqlSound = "SELECT meaning FROM dictionary where meaning = 'seribu tahun'";
        String sqlSaddle = "SELECT meaning FROM dictionary where meaning = 'sinar X'";
        String sqlTalent = "SELECT meaning FROM dictionary where meaning = 'suara'";
        String sqlTactile = "SELECT meaning FROM dictionary where meaning = 'taktil'";
        String sqlTachyon = "SELECT meaning FROM dictionary where meaning = 'telanjang'";
        String sqlTaffy = "SELECT meaning FROM dictionary where meaning = 'terakhir'";
        String sqlUkulele = "SELECT meaning FROM dictionary where meaning = 'terkenal jahat'";
        String sqlUlcer = "SELECT meaning FROM dictionary where meaning = 'tertawa'";
        String sqlUltimate = "SELECT meaning FROM dictionary where meaning = 'tombol'";
        String sqlUgly = "SELECT meaning FROM dictionary where meaning = 'uang kembali'";
        
       try {
            
             Statement stmt  = conn.createStatement();
               rs   = stmt.executeQuery(sqlSabbath);
              s1.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }                                   
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlSacral);
              s2.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlSound);
             ResultSetMetaData rsmd = rs.getMetaData();
                    s3.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }        
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlSaddle);
             ResultSetMetaData rsmd = rs.getMetaData();
                 s4.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTalent);
             ResultSetMetaData rsmd = rs.getMetaData();
                   s5.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }       
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTactile);
                   s6.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
       try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTachyon);
                    s7.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlTaffy);
                    s8.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUkulele);
                   s9.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUlcer);
                    s10.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUltimate);
                   s11.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }     
     try {
            
             Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(sqlUgly);
                    s12.setText(rs.getString("meaning"));
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }
    }      // TODO add your handling code here:
    }//GEN-LAST:event_stuBtnMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        placeholderPnl.setVisible(true);
        res.setText("");
        
           
            searchFieldIndo.setVisible(true);
            searchFieldIndo.setText("Enter a word");
            searchFieldEnglish.setVisible(false);
            
      
            res.setText("Translate to English");
            
           
        
              // TODO add your handling code here:
    }//GEN-LAST:event_resetMouseClicked

    private void placeholderPnlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeholderPnlMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_placeholderPnlMouseClicked

    private void a2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a2MouseClicked
        if (radioEng.isSelected()){
         searchFieldEnglish.setText("advances");  
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'advances'";
           
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
             res.setText(rs.getString("meaning"));
           //  rs   = stmt.executeQuery(abdicationDfn);
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("antara"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_a2MouseClicked

    private void a1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a1MouseClicked
        if(radioEng.isSelected()){
        searchFieldEnglish.setText("abdication");    
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'abdication'";
            //String abdicationDfn = "SELECT definition FROM dictionary where words = 'abdication'";
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
             res.setText(rs.getString("meaning"));
           //  rs   = stmt.executeQuery(abdicationDfn);  
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("abdikasi"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }
        }// TODO add your handling code here:
    }//GEN-LAST:event_a1MouseClicked

    private void a3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a3MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("adventure");    
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'adventure'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning"));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("alat menguap"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_a3MouseClicked

    private void a4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a4MouseClicked
         if (radioEng.isSelected()) {
             searchFieldEnglish.setText("among");  
            try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'among'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning"));  
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("angin barat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}        // TODO add your handling code here:
    }//GEN-LAST:event_a4MouseClicked

    private void a5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseClicked
         if (radioEng.isSelected()) {
              searchFieldEnglish.setText("backboard");  
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'backboard'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning"));  
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("asam xenat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_a5MouseClicked

    private void a6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a6MouseClicked
        if (radioEng.isSelected()) { 
        try {
            searchFieldEnglish.setText("bankrupt");
            String wordIs = "SELECT meaning FROM dictionary where words = 'bankrupt'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("bakat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}           // TODO add your handling code here:
    }//GEN-LAST:event_a6MouseClicked

    private void a7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a7MouseClicked
         if (radioEng.isSelected()) {
            try {
            searchFieldEnglish.setText("biscuit");
            String wordIs = "SELECT meaning FROM dictionary where words = 'biscuit'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("bangkrut"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_a7MouseClicked

    private void a8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a8MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("bulk up");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'bulk up'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning"));
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("bank komersil"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_a8MouseClicked

    private void a9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a9MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("cactus");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'cactus'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning"));
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("basah"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}           // TODO add your handling code here:
    }//GEN-LAST:event_a9MouseClicked

    private void a10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a10MouseClicked
         if (radioEng.isSelected()) {
             searchFieldEnglish.setText("cashback");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'cashback'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
          res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("belalang"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a10.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_a10MouseClicked

    private void a11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a11MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("cheerlead");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'cheerlead'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("berlebihan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_a11MouseClicked

    private void a12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a12MouseClicked
        if (radioEng.isSelected()) { 
        try {
            searchFieldEnglish.setText("commercial bank");
            String wordIs = "SELECT meaning FROM dictionary where words = 'commercial bank'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("bernyanyi yodel"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, a12.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_a12MouseClicked

    private void d1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d1MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("depressive");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'depressive'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
            }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("dapur"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_d1MouseClicked

    private void d1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d1ActionPerformed

    private void d2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d2MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("dispensator");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'dispensator'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("dayung"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_d2MouseClicked

    private void d2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d2ActionPerformed

    private void d3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d3MouseClicked
        if (radioEng.isSelected()) { 
              searchFieldEnglish.setText("drug eruption");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'drug eruption'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("dengan mudah"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_d3MouseClicked

    private void d3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d3ActionPerformed

    private void d4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d4MouseClicked
        if (radioEng.isSelected()) {
              searchFieldEnglish.setText("duplicate");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'duplicate'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("depresif"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}        // TODO add your handling code here:
    }//GEN-LAST:event_d4MouseClicked

    private void d4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d4ActionPerformed

    private void d5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d5MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("easily");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'easily'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("dispensator"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}           // TODO add your handling code here:
    }//GEN-LAST:event_d5MouseClicked

    private void d5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d5ActionPerformed

    private void d6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d6MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("evaporator");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'evaporator'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning"));
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("domba gunung"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_d6MouseClicked

    private void d6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d6ActionPerformed

    private void d7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d7MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("exaggerate");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'exaggerate'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("duplikat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}           // TODO add your handling code here:
    }//GEN-LAST:event_d7MouseClicked

    private void d7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d7ActionPerformed

    private void d8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d8MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("extreme");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'extreme'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("ek"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_d8MouseClicked

    private void d8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d8ActionPerformed

    private void d9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d9MouseClicked
         if (radioEng.isSelected()) {
               searchFieldEnglish.setText("factionalize");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'factionalize'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("ekstrim"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_d9MouseClicked

    private void d9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d9ActionPerformed

    private void d10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d10MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("fishline");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'fishline'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("erupsi obat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d10.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_d10MouseClicked

    private void d10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d10ActionPerformed

    private void d11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d11MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("fourball");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'fourball'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("es krim"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_d11MouseClicked

    private void d11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d11ActionPerformed

    private void d12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d12MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("fox brush");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'fox brush'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("fourball"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, d12.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_d12MouseClicked

    private void d12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d12ActionPerformed

    private void g1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g1MouseClicked
        if (radioEng.isSelected()) {
          searchFieldEnglish.setText("gingerbread");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'gingerbread'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning"));
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("galaksi"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_g1MouseClicked

    private void g1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g1ActionPerformed

    private void g2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g2MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("grasshopper");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'grasshopper'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("gitar kecil"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_g2MouseClicked

    private void g2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g2ActionPerformed

    private void g3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g3MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("gravity");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'gravity'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("gravitasi"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_g3MouseClicked

    private void g3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g3ActionPerformed

    private void g4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g4MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("galactic");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'galactic'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("gula-gula"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_g4MouseClicked

    private void g4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g4ActionPerformed

    private void g5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g5MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("habitat");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'habitat'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("habitat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_g5MouseClicked

    private void g5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g5ActionPerformed

    private void g6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g6MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("helping");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'helping'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("hanya"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_g6MouseClicked

    private void g6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g6ActionPerformed

    private void g7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g7MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("holistic");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'holistic'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("ikan oar"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_g7MouseClicked

    private void g7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g7ActionPerformed

    private void g8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g8MouseClicked
        if (radioEng.isSelected()) {
        try {
            searchFieldEnglish.setText("homesick");
            String wordIs = "SELECT meaning FROM dictionary where words = 'homesick'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("infinitif"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}           // TODO add your handling code here:
    }//GEN-LAST:event_g8MouseClicked

    private void g8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g8ActionPerformed

    private void g9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g9MouseClicked
        if (radioEng.isSelected()) {
        try {
            searchFieldEnglish.setText("ice cream");
            String wordIs = "SELECT meaning FROM dictionary where words = 'ice cream'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("inhalasi"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_g9MouseClicked

    private void g9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g9ActionPerformed

    private void g10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g10MouseClicked
        if (radioEng.isSelected()) {
        try {
            searchFieldEnglish.setText("infinitive");
            String wordIs = "SELECT meaning FROM dictionary where words = 'infinitive'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_g10MouseClicked

    private void g10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g10ActionPerformed

    private void g11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g11MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("infirmary");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'infirmary'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_g11MouseClicked

    private void g11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g11ActionPerformed

    private void g12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_g12MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("inhalation");
        
            try {
           
            String wordIs = "SELECT meaning FROM dictionary where words = 'inhalation'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
   
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}  else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, g9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_g12MouseClicked

    private void g12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_g12ActionPerformed

    private void j1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j1MouseClicked
         if (radioEng.isSelected()) {
               searchFieldEnglish.setText("jailbreak");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'jailbreak'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("jalan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_j1MouseClicked

    private void j1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j1ActionPerformed

    private void j2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j2MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("just");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'just'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning"));
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("jelek"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_j2MouseClicked

    private void j2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j2ActionPerformed

    private void j3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j3MouseClicked
        if (radioEng.isSelected()) {
              searchFieldEnglish.setText("justify");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'justify'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("kacang"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_j3MouseClicked

    private void j3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j3ActionPerformed

    private void j4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j4MouseClicked
        if (radioEng.isSelected()) {
              searchFieldEnglish.setText("jam");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'jam'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("kaktus"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_j4MouseClicked

    private void j4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j4ActionPerformed

    private void j5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j5MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("kitchen");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'kitchen'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("kapal pesiar"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}        // TODO add your handling code here:
    }//GEN-LAST:event_j5MouseClicked

    private void j5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j5ActionPerformed

    private void j6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j6MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("knee");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'knee'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("kekurangan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}            // TODO add your handling code here:
    }//GEN-LAST:event_j6MouseClicked

    private void j6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j6ActionPerformed

    private void j7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j7MouseClicked
        if (radioEng.isSelected()) {
              searchFieldEnglish.setText("knob");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'knob'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("kemacetan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_j7MouseClicked

    private void j7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j7ActionPerformed

    private void j8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j8MouseClicked
        if (radioEng.isSelected()) {  
            searchFieldEnglish.setText("knowledgeable");
        try {
            String wordIs = "SELECT  meaning FROM dictionary where words = 'knowledgeable'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
           res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("keributan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_j8MouseClicked

    private void j8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j8ActionPerformed

    private void j9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j9MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("lack");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'lack'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("lembah"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}              // TODO add your handling code here:
    }//GEN-LAST:event_j9MouseClicked

    private void j9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j9ActionPerformed

    private void j10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j10MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("laugh");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'laugh'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
        }} else if (radioInd.isSelected()) {
                searchFieldIndo.setText("lembu berbulu panjang"); 
                try {
                String search = "SELECT words from dictionary where meaning = ?";
                pst = conn.prepareStatement(search);
                pst.setString(1, j10.getText());
                 rs   = pst.executeQuery();
               //  rs   = stmt.executeQuery(abdicationDfn);
                  res.setText(rs.getString(1));


            } 
                catch(Exception e){
                JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
        }}              // TODO add your handling code here:
    }//GEN-LAST:event_j10MouseClicked

    private void j10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j10ActionPerformed

    private void j11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j11MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("lice");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'lice'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("lugu"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_j11MouseClicked

    private void j11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j11ActionPerformed

    private void j12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_j12MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("lonk");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'lonk'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}else if (radioInd.isSelected()) {
            searchFieldIndo.setText("lutut"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, j12.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}                 // TODO add your handling code here:
    }//GEN-LAST:event_j12MouseClicked

    private void j12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_j12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_j12ActionPerformed

    private void m1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m1MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("machine");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'machine'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("maag"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}              // TODO add your handling code here:
    }//GEN-LAST:event_m1MouseClicked

    private void m1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m1ActionPerformed

    private void m2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m2MouseClicked
       if (radioEng.isSelected()) {
           searchFieldEnglish.setText("mare");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'mare'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("massal"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}   // TODO add your handling code here:
    }//GEN-LAST:event_m2MouseClicked

    private void m2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m2ActionPerformed

    private void m3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m3MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("megapixel");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'megapixel'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("megapiksel"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_m3MouseClicked

    private void m3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m3ActionPerformed

    private void m4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m4MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("millenary");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'millenary'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}else if (radioInd.isSelected()) {
            searchFieldIndo.setText("membantu"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_m4MouseClicked

    private void m4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m4ActionPerformed

    private void m5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m5MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("naive");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'naive'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("membenarkan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_m5MouseClicked

    private void m5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m5ActionPerformed

    private void m6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m6MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("naked");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'naked'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("memeriksa"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_m6MouseClicked

    private void m6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m6ActionPerformed

    private void m7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m7MouseClicked
       if (radioEng.isSelected()) {
           searchFieldEnglish.setText("notorious");
        try {
            String wordIs = "SELECT  meaning FROM dictionary where words = 'notorious'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("memfaksi"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_m7MouseClicked

    private void m7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m7ActionPerformed

    private void m8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m8MouseClicked
         if (radioEng.isSelected()) {
             searchFieldEnglish.setText("nut");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'nut'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("menyeluruh"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_m8MouseClicked

    private void m8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m8ActionPerformed

    private void m9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m9MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("oak");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'oak'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("mesin"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_m9MouseClicked

    private void m9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m9ActionPerformed

    private void m10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m10MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("oarfish");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'oarfish'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
           res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("muka"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m10.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_m10MouseClicked

    private void m10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m10ActionPerformed

    private void m11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m11MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("opaque");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'opaque'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("nol"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_m11MouseClicked

    private void m11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m11ActionPerformed

    private void m12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_m12MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("oblige");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'oblige'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, m11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_m12MouseClicked

    private void m12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_m12ActionPerformed

    private void p2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p2MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("paddy");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'paddy'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("pancing"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p2MouseClicked

    private void p2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p2ActionPerformed

    private void p3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p3MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("printer");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'printer'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("papan belakang"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p3MouseClicked

    private void p3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p3ActionPerformed

    private void p4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p4MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("page");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'page'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("pelana"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p4MouseClicked

    private void p4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p4ActionPerformed

    private void p5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p5MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("quantum");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'quantum'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning"));     
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("pelayan"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p5MouseClicked

    private void p5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p5ActionPerformed

    private void p6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p6MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("quantity");
        try {
                String wordIs = "SELECT meaning FROM dictionary where words = 'quantity'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("pemandu sorak"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p6MouseClicked

    private void p6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p6ActionPerformed

    private void p7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p7MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("quality");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'quality'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("pencetak"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p7MouseClicked

    private void p7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p7ActionPerformed

    private void p8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p8MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("quote");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'quote'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}else if (radioInd.isSelected()) {
            searchFieldIndo.setText("pertengkaran"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}  // TODO add your handling code here:
    }//GEN-LAST:event_p8MouseClicked

    private void p8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p8ActionPerformed

    private void p9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p9MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("racket");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'racket'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("rakun"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}  // TODO add your handling code here:
    }//GEN-LAST:event_p9MouseClicked

    private void p9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p9ActionPerformed

    private void p10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p10MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("rack");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'rack'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
            
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("rindu"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p10.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p10MouseClicked

    private void p10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p10ActionPerformed

    private void p11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p11MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("raccoon");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'raccoon'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("roti jahe"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}  // TODO add your handling code here:
    }//GEN-LAST:event_p11MouseClicked

    private void p11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p11ActionPerformed

    private void p12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p12MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("rag doll");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'rag doll'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("rumah sakit"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p12.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_p12MouseClicked

    private void p12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_p12ActionPerformed

    private void sabbathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paddle2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_paddle2MouseClicked

    private void sabbathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paddle2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paddle2ActionPerformed

    private void s2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s2MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("sacral");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'sacral'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("sakral"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}               // TODO add your handling code here:
    }//GEN-LAST:event_s2MouseClicked

    private void s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s2ActionPerformed

    private void s3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s3MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("sound");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'sound'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("seribu tahun"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}      // TODO add your handling code here:
    }//GEN-LAST:event_s3MouseClicked

    private void s3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s3ActionPerformed

    private void s4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s4MouseClicked
        if (radioEng.isSelected()) { 
             searchFieldEnglish.setText("saddle");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'saddle'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("sinar X"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}     // TODO add your handling code here:
    }//GEN-LAST:event_s4MouseClicked

    private void s4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s4ActionPerformed

    private void s5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s5MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("talent");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'talent'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("suara"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s5.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}      // TODO add your handling code here:
    }//GEN-LAST:event_s5MouseClicked

    private void s5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s5ActionPerformed

    private void s6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s6MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("tactile");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'tactile'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
               res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}  else if (radioInd.isSelected()) {
            searchFieldIndo.setText("taktil"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s6.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}      // TODO add your handling code here:
    }//GEN-LAST:event_s6MouseClicked

    private void s6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s6ActionPerformed

    private void s7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s7MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("tachyon");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'tachyon'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("telanjang"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s7.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}       // TODO add your handling code here:
    }//GEN-LAST:event_s7MouseClicked

    private void s7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s7ActionPerformed

    private void s8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s8MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("taffy");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'taffy'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("terakhir"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s8.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}     // TODO add your handling code here:
    }//GEN-LAST:event_s8MouseClicked

    private void s8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s8ActionPerformed

    private void s9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s9MouseClicked
        if (radioEng.isSelected()) { 
             searchFieldEnglish.setText("ukulele");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'ukulele'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("terkenal jahat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s9.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}       // TODO add your handling code here:
    }//GEN-LAST:event_s9MouseClicked

    private void s9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s9ActionPerformed

    private void s10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s10MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("ulcer");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'ulcer'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }}else if (radioInd.isSelected()) {
            searchFieldIndo.setText("tertawa"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s10.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}      // TODO add your handling code here:
    }//GEN-LAST:event_s10MouseClicked

    private void s10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s10ActionPerformed

    private void s11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s11MouseClicked
        if (radioEng.isSelected()) { 
             searchFieldEnglish.setText("ultimate");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'ultimate'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("tombol"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s11.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}     // TODO add your handling code here:
    }//GEN-LAST:event_s11MouseClicked

    private void s11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s11ActionPerformed

    private void s12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s12MouseClicked
        if (radioEng.isSelected()) { 
            searchFieldEnglish.setText("ugly");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'ugly'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
           res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("uang kembali"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s12.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}        // TODO add your handling code here:
    }//GEN-LAST:event_s12MouseClicked

    private void s12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s12ActionPerformed

    private void p1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p1MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("paddle");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'paddle'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("padi"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, p1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_p1MouseClicked

    private void s1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_s1MousePressed
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("sabbath");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'sabbath'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("sabat"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, s1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}             // TODO add your handling code here:
    }//GEN-LAST:event_s1MousePressed

    private void v1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_v1MousePressed

    private void v2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v2MouseClicked
         if (radioEng.isSelected()) {
             searchFieldEnglish.setText("vale");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'vale'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("xenofil"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v2.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_v2MouseClicked

    private void v2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v2ActionPerformed

    private void v3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v3MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("veil");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'veil'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("xylitol"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_v3MouseClicked

    private void v3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v3ActionPerformed

    private void v4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v4MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("vet");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'vet'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v3.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v4MouseClicked

    private void v4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v4ActionPerformed

    private void v5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v5MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("waiter");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'waiter'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v5MouseClicked

    private void v5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v5ActionPerformed

    private void v6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v6MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("wet");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'wet'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v6MouseClicked

    private void v6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v6ActionPerformed

    private void v7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v7MouseClicked
         if (radioEng.isSelected()) {
               searchFieldEnglish.setText("walk");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'walk'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v7MouseClicked

    private void v7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v7ActionPerformed

    private void v8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v8MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("wheelchair");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'wheelchair'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v8MouseClicked

    private void v8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v8ActionPerformed

    private void v9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v9MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("x-ray");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'x-ray'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
           res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v9MouseClicked

    private void v9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v9ActionPerformed

    private void v10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v10MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("xylitol");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'xylitol'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v10MouseClicked

    private void v10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v10ActionPerformed

    private void v11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v11MouseClicked
       if (radioEng.isSelected()) {
           searchFieldEnglish.setText("xenophile");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'xenophile'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_v11MouseClicked

    private void v11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v11ActionPerformed

    private void v12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v12MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("xenic acid");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'xenic acid'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}// TODO add your handling code here:
    }//GEN-LAST:event_v12MouseClicked

    private void v12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_v12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_v12ActionPerformed

    private void v1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_v1MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("vacant");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'vacant'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("wajib"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}         // TODO add your handling code here:
    }//GEN-LAST:event_v1MouseClicked

    private void y1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y1MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("yellow");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'yellow'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText("zebra"); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, y1.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}          // TODO add your handling code here:
    }//GEN-LAST:event_y1MouseClicked

    private void y1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_y1MousePressed

    private void y2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y2MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("yodel");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'yodel'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y2MouseClicked

    private void y2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y2ActionPerformed

    private void y3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y3MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("yacht");
            
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'yacht'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y3MouseClicked

    private void y3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y3ActionPerformed

    private void y4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y4MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("yak");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'yak'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
            res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y4MouseClicked

    private void y4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y4ActionPerformed

    private void y5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y5MouseClicked
        if (radioEng.isSelected()) {
            searchFieldEnglish.setText("zephyr");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'zephyr'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y5MouseClicked

    private void y5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y5ActionPerformed

    private void y6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y6MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("zero");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'zero'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y6MouseClicked

    private void y6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y6ActionPerformed

    private void y7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y7MouseClicked
        if (radioEng.isSelected()) {
             searchFieldEnglish.setText("zap");
            
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'zap'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y7MouseClicked

    private void y7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y7ActionPerformed

    private void y8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_y8MouseClicked
       if (radioEng.isSelected()) {
           searchFieldEnglish.setText("zebra");
        try {
            String wordIs = "SELECT meaning FROM dictionary where words = 'zebra'";
            
            Statement stmt  = conn.createStatement();
             rs   = stmt.executeQuery(wordIs);
           //  rs   = stmt.executeQuery(abdicationDfn);
             res.setText(rs.getString("meaning")); 
              
             
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, e);        // TODO add your handling code here:
    }} else if (radioInd.isSelected()) {
            searchFieldIndo.setText(""); 
            try {
            String search = "SELECT words from dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, v4.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText("");
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no definition found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_y8MouseClicked

    private void y8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y8ActionPerformed

    private void zebraOldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zebraOldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_zebraOldMouseClicked

    private void zebraOldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zebraOldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_zebraOldActionPerformed

    private void radioIndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioIndActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioIndActionPerformed

    private void radioEngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioEngActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioEngActionPerformed

    private void searchFieldIndoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldIndoMouseClicked
        searchFieldIndo.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldIndoMouseClicked

    private void resMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_resMouseClicked

    private void switchBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchBtnMouseEntered
            switchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/4. switch_button(hover).png")));        // TODO add your handling code here:
    }//GEN-LAST:event_switchBtnMouseEntered

    private void switchBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchBtnMouseExited
        switchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/4. switch_button.png")));        // TODO add your handling code here:
    }//GEN-LAST:event_switchBtnMouseExited

    private void switchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchBtnMouseClicked
        if (searchFieldIndo.isVisible()) {
            searchFieldEnglish.setText("Enter a word");
            searchFieldIndo.setVisible(false);
            searchFieldEnglish.setVisible(true);
            res.setText("Translate to Indonesian");
        } else if (searchFieldEnglish.isVisible()) {
            res.setText("Translate to English");
            searchFieldIndo.setText("Enter a word");
            searchFieldIndo.setVisible(true);
            searchFieldEnglish.setVisible(false);
        } 
    

// TODO add your handling code here:
    }//GEN-LAST:event_switchBtnMouseClicked

    private void translateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_translateBtnMouseClicked
        if (searchFieldIndo.isVisible()){
        try {
            String search = "SELECT words FROM dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, searchFieldIndo.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            //JOptionPane.showMessageDialog(null, e);
            JOptionPane.showMessageDialog(null, "Sorry, no translation found. Please try another word!", "Lumen", JOptionPane.WARNING_MESSAGE);        // TODO add your handling code here:
    }
        } else if (searchFieldEnglish.isVisible()) {
            try {
            String search = "SELECT meaning FROM dictionary where words = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, searchFieldEnglish.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
           //JOptionPane.showMessageDialog(null, e);            
    JOptionPane.showMessageDialog(null, "Sorry, no translation found. Please try another word!", "Lumen", JOptionPane.WARNING_MESSAGE);        // TODO add your handling code here:
    }
        }// TODO add your handling code here:
    }//GEN-LAST:event_translateBtnMouseClicked

    private void searchFieldEnglishMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldEnglishMouseClicked
        searchFieldEnglish.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldEnglishMouseClicked

    private void searchFieldIndoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldIndoKeyPressed
            if(evt.getKeyCode()== evt.VK_ENTER){   
            try {
            String search = "SELECT words FROM dictionary where meaning = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, searchFieldIndo.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no translation found. Please try another word!", "Lumen", JOptionPane.WARNING_MESSAGE);        // TODO add your handling code here:
    }} // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldIndoKeyPressed

    private void searchFieldEnglishKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldEnglishKeyPressed
        if(evt.getKeyCode()== evt.VK_ENTER){   
            try {
            String search = "SELECT meaning FROM dictionary where words = ?";
            pst = conn.prepareStatement(search);
            pst.setString(1, searchFieldEnglish.getText());
             rs   = pst.executeQuery();
           //  rs   = stmt.executeQuery(abdicationDfn);
              res.setText(rs.getString(1));
              
              
        } 
            catch(Exception e){
            JOptionPane.showMessageDialog(null, "Sorry, no translation found. Please try another word!", "Lumen", JOptionPane.INFORMATION_MESSAGE);        // TODO add your handling code here:
    }}        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldEnglishKeyPressed

    private void pqrBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pqrBtnMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_pqrBtnMouseEntered

    private void translateBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_translateBtnKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_translateBtnKeyPressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Translate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Translate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Translate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Translate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Translate().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField a1;
    public javax.swing.JTextField a10;
    public javax.swing.JTextField a11;
    public javax.swing.JTextField a12;
    public javax.swing.JTextField a2;
    public javax.swing.JTextField a3;
    public javax.swing.JTextField a4;
    public javax.swing.JTextField a5;
    public javax.swing.JTextField a6;
    public javax.swing.JTextField a7;
    public javax.swing.JTextField a8;
    public javax.swing.JTextField a9;
    private javax.swing.JLabel abcBtn;
    private javax.swing.JPanel abcPanel;
    private javax.swing.JLabel back;
    private javax.swing.JLabel border;
    private javax.swing.JPanel btnPanel;
    private javax.swing.ButtonGroup buttonGroup;
    public javax.swing.JTextField d1;
    public javax.swing.JTextField d10;
    public javax.swing.JTextField d11;
    public javax.swing.JTextField d12;
    public javax.swing.JTextField d2;
    public javax.swing.JTextField d3;
    public javax.swing.JTextField d4;
    public javax.swing.JTextField d5;
    public javax.swing.JTextField d6;
    public javax.swing.JTextField d7;
    public javax.swing.JTextField d8;
    public javax.swing.JTextField d9;
    private javax.swing.JLabel defBtn;
    private javax.swing.JPanel defPanel;
    public javax.swing.JTextField g1;
    public javax.swing.JTextField g10;
    public javax.swing.JTextField g11;
    public javax.swing.JTextField g12;
    public javax.swing.JTextField g2;
    public javax.swing.JTextField g3;
    public javax.swing.JTextField g4;
    public javax.swing.JTextField g5;
    public javax.swing.JTextField g6;
    public javax.swing.JTextField g7;
    public javax.swing.JTextField g8;
    public javax.swing.JTextField g9;
    private javax.swing.JLabel ghiBtn;
    private javax.swing.JPanel ghiPanel;
    public javax.swing.JTextField j1;
    public javax.swing.JTextField j10;
    public javax.swing.JTextField j11;
    public javax.swing.JTextField j12;
    public javax.swing.JTextField j2;
    public javax.swing.JTextField j3;
    public javax.swing.JTextField j4;
    public javax.swing.JTextField j5;
    public javax.swing.JTextField j6;
    public javax.swing.JTextField j7;
    public javax.swing.JTextField j8;
    public javax.swing.JTextField j9;
    private javax.swing.JLabel jklBtn;
    private javax.swing.JPanel jklPanel;
    public javax.swing.JTextField m1;
    public javax.swing.JTextField m10;
    public javax.swing.JTextField m11;
    public javax.swing.JTextField m12;
    public javax.swing.JTextField m2;
    public javax.swing.JTextField m3;
    public javax.swing.JTextField m4;
    public javax.swing.JTextField m5;
    public javax.swing.JTextField m6;
    public javax.swing.JTextField m7;
    public javax.swing.JTextField m8;
    public javax.swing.JTextField m9;
    private javax.swing.JPanel mainPnl;
    private javax.swing.JLabel mnoBtn;
    private javax.swing.JPanel mnoPanel;
    public javax.swing.JTextField p1;
    public javax.swing.JTextField p10;
    public javax.swing.JTextField p11;
    public javax.swing.JTextField p12;
    public javax.swing.JTextField p2;
    public javax.swing.JTextField p3;
    public javax.swing.JTextField p4;
    public javax.swing.JTextField p5;
    public javax.swing.JTextField p6;
    public javax.swing.JTextField p7;
    public javax.swing.JTextField p8;
    public javax.swing.JTextField p9;
    private javax.swing.JPanel placeholderPnl;
    private javax.swing.JLabel pqrBtn;
    private javax.swing.JPanel pqrPanel;
    private javax.swing.JRadioButton radioEng;
    private javax.swing.JRadioButton radioInd;
    private javax.swing.JTextField res;
    private javax.swing.JLabel reset;
    private javax.swing.JPanel resultPnl;
    public javax.swing.JTextField s1;
    public javax.swing.JTextField s10;
    public javax.swing.JTextField s11;
    public javax.swing.JTextField s12;
    public javax.swing.JTextField s2;
    public javax.swing.JTextField s3;
    public javax.swing.JTextField s4;
    public javax.swing.JTextField s5;
    public javax.swing.JTextField s6;
    public javax.swing.JTextField s7;
    public javax.swing.JTextField s8;
    public javax.swing.JTextField s9;
    private javax.swing.JTextField searchFieldEnglish;
    private javax.swing.JTextField searchFieldIndo;
    private javax.swing.JPanel searchPnl;
    private javax.swing.JLabel select;
    private javax.swing.JLabel stuBtn;
    private javax.swing.JPanel stuPanel;
    private javax.swing.JButton switchBtn;
    private javax.swing.JLabel translateBG;
    private javax.swing.JButton translateBtn;
    public javax.swing.JTextField v1;
    public javax.swing.JTextField v10;
    public javax.swing.JTextField v11;
    public javax.swing.JTextField v12;
    public javax.swing.JTextField v2;
    public javax.swing.JTextField v3;
    public javax.swing.JTextField v4;
    public javax.swing.JTextField v5;
    public javax.swing.JTextField v6;
    public javax.swing.JTextField v7;
    public javax.swing.JTextField v8;
    public javax.swing.JTextField v9;
    private javax.swing.JLabel vwxBtn;
    private javax.swing.JPanel vwxPanel;
    public javax.swing.JTextField y1;
    public javax.swing.JTextField y2;
    public javax.swing.JTextField y3;
    public javax.swing.JTextField y4;
    public javax.swing.JTextField y5;
    public javax.swing.JTextField y6;
    public javax.swing.JTextField y7;
    public javax.swing.JTextField y8;
    private javax.swing.JLabel yzBtn;
    private javax.swing.JPanel yzPanel;
    public javax.swing.JTextField zebraOld;
    // End of variables declaration//GEN-END:variables

    


    }

